import {
  ResizeObserver_es_default
} from "./chunk-5PJ25SEV.js";
import {
  __commonJS,
  __toModule,
  require_react
} from "./chunk-W2Q3WZPY.js";

// node_modules/lodash.debounce/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.debounce/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    var now = function() {
      return root.Date.now();
    };
    function debounce3(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject2(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    function isObject2(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject2(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject2(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = debounce3;
  }
});

// node_modules/lodash.throttle/index.js
var require_lodash2 = __commonJS({
  "node_modules/lodash.throttle/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var NAN = 0 / 0;
    var symbolTag = "[object Symbol]";
    var reTrim = /^\s+|\s+$/g;
    var reIsBadHex = /^[-+]0x[0-9a-f]+$/i;
    var reIsBinary = /^0b[01]+$/i;
    var reIsOctal = /^0o[0-7]+$/i;
    var freeParseInt = parseInt;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var objectProto = Object.prototype;
    var objectToString = objectProto.toString;
    var nativeMax = Math.max;
    var nativeMin = Math.min;
    var now = function() {
      return root.Date.now();
    };
    function debounce3(func, wait, options) {
      var lastArgs, lastThis, maxWait, result, timerId, lastCallTime, lastInvokeTime = 0, leading = false, maxing = false, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      wait = toNumber(wait) || 0;
      if (isObject2(options)) {
        leading = !!options.leading;
        maxing = "maxWait" in options;
        maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      function invokeFunc(time) {
        var args = lastArgs, thisArg = lastThis;
        lastArgs = lastThis = void 0;
        lastInvokeTime = time;
        result = func.apply(thisArg, args);
        return result;
      }
      function leadingEdge(time) {
        lastInvokeTime = time;
        timerId = setTimeout(timerExpired, wait);
        return leading ? invokeFunc(time) : result;
      }
      function remainingWait(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime, result2 = wait - timeSinceLastCall;
        return maxing ? nativeMin(result2, maxWait - timeSinceLastInvoke) : result2;
      }
      function shouldInvoke(time) {
        var timeSinceLastCall = time - lastCallTime, timeSinceLastInvoke = time - lastInvokeTime;
        return lastCallTime === void 0 || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;
      }
      function timerExpired() {
        var time = now();
        if (shouldInvoke(time)) {
          return trailingEdge(time);
        }
        timerId = setTimeout(timerExpired, remainingWait(time));
      }
      function trailingEdge(time) {
        timerId = void 0;
        if (trailing && lastArgs) {
          return invokeFunc(time);
        }
        lastArgs = lastThis = void 0;
        return result;
      }
      function cancel() {
        if (timerId !== void 0) {
          clearTimeout(timerId);
        }
        lastInvokeTime = 0;
        lastArgs = lastCallTime = lastThis = timerId = void 0;
      }
      function flush() {
        return timerId === void 0 ? result : trailingEdge(now());
      }
      function debounced() {
        var time = now(), isInvoking = shouldInvoke(time);
        lastArgs = arguments;
        lastThis = this;
        lastCallTime = time;
        if (isInvoking) {
          if (timerId === void 0) {
            return leadingEdge(lastCallTime);
          }
          if (maxing) {
            timerId = setTimeout(timerExpired, wait);
            return invokeFunc(lastCallTime);
          }
        }
        if (timerId === void 0) {
          timerId = setTimeout(timerExpired, wait);
        }
        return result;
      }
      debounced.cancel = cancel;
      debounced.flush = flush;
      return debounced;
    }
    function throttle3(func, wait, options) {
      var leading = true, trailing = true;
      if (typeof func != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      if (isObject2(options)) {
        leading = "leading" in options ? !!options.leading : leading;
        trailing = "trailing" in options ? !!options.trailing : trailing;
      }
      return debounce3(func, wait, {
        "leading": leading,
        "maxWait": wait,
        "trailing": trailing
      });
    }
    function isObject2(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return !!value && typeof value == "object";
    }
    function isSymbol(value) {
      return typeof value == "symbol" || isObjectLike(value) && objectToString.call(value) == symbolTag;
    }
    function toNumber(value) {
      if (typeof value == "number") {
        return value;
      }
      if (isSymbol(value)) {
        return NAN;
      }
      if (isObject2(value)) {
        var other = typeof value.valueOf == "function" ? value.valueOf() : value;
        value = isObject2(other) ? other + "" : other;
      }
      if (typeof value != "string") {
        return value === 0 ? value : +value;
      }
      value = value.replace(reTrim, "");
      var isBinary = reIsBinary.test(value);
      return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;
    }
    module.exports = throttle3;
  }
});

// node_modules/screenfull/dist/screenfull.js
var require_screenfull = __commonJS({
  "node_modules/screenfull/dist/screenfull.js"(exports, module) {
    (function() {
      "use strict";
      var document2 = typeof window !== "undefined" && typeof window.document !== "undefined" ? window.document : {};
      var isCommonjs = typeof module !== "undefined" && module.exports;
      var fn = function() {
        var val;
        var fnMap = [
          [
            "requestFullscreen",
            "exitFullscreen",
            "fullscreenElement",
            "fullscreenEnabled",
            "fullscreenchange",
            "fullscreenerror"
          ],
          [
            "webkitRequestFullscreen",
            "webkitExitFullscreen",
            "webkitFullscreenElement",
            "webkitFullscreenEnabled",
            "webkitfullscreenchange",
            "webkitfullscreenerror"
          ],
          [
            "webkitRequestFullScreen",
            "webkitCancelFullScreen",
            "webkitCurrentFullScreenElement",
            "webkitCancelFullScreen",
            "webkitfullscreenchange",
            "webkitfullscreenerror"
          ],
          [
            "mozRequestFullScreen",
            "mozCancelFullScreen",
            "mozFullScreenElement",
            "mozFullScreenEnabled",
            "mozfullscreenchange",
            "mozfullscreenerror"
          ],
          [
            "msRequestFullscreen",
            "msExitFullscreen",
            "msFullscreenElement",
            "msFullscreenEnabled",
            "MSFullscreenChange",
            "MSFullscreenError"
          ]
        ];
        var i = 0;
        var l = fnMap.length;
        var ret = {};
        for (; i < l; i++) {
          val = fnMap[i];
          if (val && val[1] in document2) {
            for (i = 0; i < val.length; i++) {
              ret[fnMap[0][i]] = val[i];
            }
            return ret;
          }
        }
        return false;
      }();
      var eventNameMap = {
        change: fn.fullscreenchange,
        error: fn.fullscreenerror
      };
      var screenfull2 = {
        request: function(element, options) {
          return new Promise(function(resolve, reject) {
            var onFullScreenEntered = function() {
              this.off("change", onFullScreenEntered);
              resolve();
            }.bind(this);
            this.on("change", onFullScreenEntered);
            element = element || document2.documentElement;
            var returnPromise = element[fn.requestFullscreen](options);
            if (returnPromise instanceof Promise) {
              returnPromise.then(onFullScreenEntered).catch(reject);
            }
          }.bind(this));
        },
        exit: function() {
          return new Promise(function(resolve, reject) {
            if (!this.isFullscreen) {
              resolve();
              return;
            }
            var onFullScreenExit = function() {
              this.off("change", onFullScreenExit);
              resolve();
            }.bind(this);
            this.on("change", onFullScreenExit);
            var returnPromise = document2[fn.exitFullscreen]();
            if (returnPromise instanceof Promise) {
              returnPromise.then(onFullScreenExit).catch(reject);
            }
          }.bind(this));
        },
        toggle: function(element, options) {
          return this.isFullscreen ? this.exit() : this.request(element, options);
        },
        onchange: function(callback) {
          this.on("change", callback);
        },
        onerror: function(callback) {
          this.on("error", callback);
        },
        on: function(event, callback) {
          var eventName = eventNameMap[event];
          if (eventName) {
            document2.addEventListener(eventName, callback, false);
          }
        },
        off: function(event, callback) {
          var eventName = eventNameMap[event];
          if (eventName) {
            document2.removeEventListener(eventName, callback, false);
          }
        },
        raw: fn
      };
      if (!fn) {
        if (isCommonjs) {
          module.exports = { isEnabled: false };
        } else {
          window.screenfull = { isEnabled: false };
        }
        return;
      }
      Object.defineProperties(screenfull2, {
        isFullscreen: {
          get: function() {
            return Boolean(document2[fn.fullscreenElement]);
          }
        },
        element: {
          enumerable: true,
          get: function() {
            return document2[fn.fullscreenElement];
          }
        },
        isEnabled: {
          enumerable: true,
          get: function() {
            return Boolean(document2[fn.fullscreenEnabled]);
          }
        }
      });
      if (isCommonjs) {
        module.exports = screenfull2;
      } else {
        window.screenfull = screenfull2;
      }
    })();
  }
});

// node_modules/js-cookie/src/js.cookie.js
var require_js_cookie = __commonJS({
  "node_modules/js-cookie/src/js.cookie.js"(exports, module) {
    (function(factory) {
      var registeredInModuleLoader;
      if (typeof define === "function" && define.amd) {
        define(factory);
        registeredInModuleLoader = true;
      }
      if (typeof exports === "object") {
        module.exports = factory();
        registeredInModuleLoader = true;
      }
      if (!registeredInModuleLoader) {
        var OldCookies = window.Cookies;
        var api = window.Cookies = factory();
        api.noConflict = function() {
          window.Cookies = OldCookies;
          return api;
        };
      }
    })(function() {
      function extend() {
        var i = 0;
        var result = {};
        for (; i < arguments.length; i++) {
          var attributes = arguments[i];
          for (var key in attributes) {
            result[key] = attributes[key];
          }
        }
        return result;
      }
      function decode(s) {
        return s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);
      }
      function init(converter) {
        function api() {
        }
        function set(key, value, attributes) {
          if (typeof document === "undefined") {
            return;
          }
          attributes = extend({
            path: "/"
          }, api.defaults, attributes);
          if (typeof attributes.expires === "number") {
            attributes.expires = new Date(new Date() * 1 + attributes.expires * 864e5);
          }
          attributes.expires = attributes.expires ? attributes.expires.toUTCString() : "";
          try {
            var result = JSON.stringify(value);
            if (/^[\{\[]/.test(result)) {
              value = result;
            }
          } catch (e) {
          }
          value = converter.write ? converter.write(value, key) : encodeURIComponent(String(value)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);
          key = encodeURIComponent(String(key)).replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent).replace(/[\(\)]/g, escape);
          var stringifiedAttributes = "";
          for (var attributeName in attributes) {
            if (!attributes[attributeName]) {
              continue;
            }
            stringifiedAttributes += "; " + attributeName;
            if (attributes[attributeName] === true) {
              continue;
            }
            stringifiedAttributes += "=" + attributes[attributeName].split(";")[0];
          }
          return document.cookie = key + "=" + value + stringifiedAttributes;
        }
        function get(key, json) {
          if (typeof document === "undefined") {
            return;
          }
          var jar = {};
          var cookies = document.cookie ? document.cookie.split("; ") : [];
          var i = 0;
          for (; i < cookies.length; i++) {
            var parts = cookies[i].split("=");
            var cookie = parts.slice(1).join("=");
            if (!json && cookie.charAt(0) === '"') {
              cookie = cookie.slice(1, -1);
            }
            try {
              var name = decode(parts[0]);
              cookie = (converter.read || converter)(cookie, name) || decode(cookie);
              if (json) {
                try {
                  cookie = JSON.parse(cookie);
                } catch (e) {
                }
              }
              jar[name] = cookie;
              if (key === name) {
                break;
              }
            } catch (e) {
            }
          }
          return key ? jar[key] : jar;
        }
        api.set = set;
        api.get = function(key) {
          return get(key, false);
        };
        api.getJSON = function(key) {
          return get(key, true);
        };
        api.remove = function(key, attributes) {
          set(key, "", extend(attributes, {
            expires: -1
          }));
        };
        api.defaults = {};
        api.withConverter = init;
        return api;
      }
      return init(function() {
      });
    });
  }
});

// node_modules/dayjs/dayjs.min.js
var require_dayjs_min = __commonJS({
  "node_modules/dayjs/dayjs.min.js"(exports, module) {
    !function(t, e) {
      typeof exports == "object" && typeof module != "undefined" ? module.exports = e() : typeof define == "function" && define.amd ? define(e) : (t = typeof globalThis != "undefined" ? globalThis : t || self).dayjs = e();
    }(exports, function() {
      "use strict";
      var t = 1e3, e = 6e4, n = 36e5, r = "millisecond", i = "second", s = "minute", u = "hour", a = "day", o = "week", f = "month", h = "quarter", c = "year", d = "date", $ = "Invalid Date", l = /^(\d{4})[-/]?(\d{1,2})?[-/]?(\d{0,2})[Tt\s]*(\d{1,2})?:?(\d{1,2})?:?(\d{1,2})?[.:]?(\d+)?$/, y = /\[([^\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g, M = { name: "en", weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_") }, m = function(t2, e2, n2) {
        var r2 = String(t2);
        return !r2 || r2.length >= e2 ? t2 : "" + Array(e2 + 1 - r2.length).join(n2) + t2;
      }, g = { s: m, z: function(t2) {
        var e2 = -t2.utcOffset(), n2 = Math.abs(e2), r2 = Math.floor(n2 / 60), i2 = n2 % 60;
        return (e2 <= 0 ? "+" : "-") + m(r2, 2, "0") + ":" + m(i2, 2, "0");
      }, m: function t2(e2, n2) {
        if (e2.date() < n2.date())
          return -t2(n2, e2);
        var r2 = 12 * (n2.year() - e2.year()) + (n2.month() - e2.month()), i2 = e2.clone().add(r2, f), s2 = n2 - i2 < 0, u2 = e2.clone().add(r2 + (s2 ? -1 : 1), f);
        return +(-(r2 + (n2 - i2) / (s2 ? i2 - u2 : u2 - i2)) || 0);
      }, a: function(t2) {
        return t2 < 0 ? Math.ceil(t2) || 0 : Math.floor(t2);
      }, p: function(t2) {
        return { M: f, y: c, w: o, d: a, D: d, h: u, m: s, s: i, ms: r, Q: h }[t2] || String(t2 || "").toLowerCase().replace(/s$/, "");
      }, u: function(t2) {
        return t2 === void 0;
      } }, D = "en", v = {};
      v[D] = M;
      var p = function(t2) {
        return t2 instanceof _;
      }, S = function(t2, e2, n2) {
        var r2;
        if (!t2)
          return D;
        if (typeof t2 == "string")
          v[t2] && (r2 = t2), e2 && (v[t2] = e2, r2 = t2);
        else {
          var i2 = t2.name;
          v[i2] = t2, r2 = i2;
        }
        return !n2 && r2 && (D = r2), r2 || !n2 && D;
      }, w = function(t2, e2) {
        if (p(t2))
          return t2.clone();
        var n2 = typeof e2 == "object" ? e2 : {};
        return n2.date = t2, n2.args = arguments, new _(n2);
      }, O = g;
      O.l = S, O.i = p, O.w = function(t2, e2) {
        return w(t2, { locale: e2.$L, utc: e2.$u, x: e2.$x, $offset: e2.$offset });
      };
      var _ = function() {
        function M2(t2) {
          this.$L = S(t2.locale, null, true), this.parse(t2);
        }
        var m2 = M2.prototype;
        return m2.parse = function(t2) {
          this.$d = function(t3) {
            var e2 = t3.date, n2 = t3.utc;
            if (e2 === null)
              return new Date(NaN);
            if (O.u(e2))
              return new Date();
            if (e2 instanceof Date)
              return new Date(e2);
            if (typeof e2 == "string" && !/Z$/i.test(e2)) {
              var r2 = e2.match(l);
              if (r2) {
                var i2 = r2[2] - 1 || 0, s2 = (r2[7] || "0").substring(0, 3);
                return n2 ? new Date(Date.UTC(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2)) : new Date(r2[1], i2, r2[3] || 1, r2[4] || 0, r2[5] || 0, r2[6] || 0, s2);
              }
            }
            return new Date(e2);
          }(t2), this.$x = t2.x || {}, this.init();
        }, m2.init = function() {
          var t2 = this.$d;
          this.$y = t2.getFullYear(), this.$M = t2.getMonth(), this.$D = t2.getDate(), this.$W = t2.getDay(), this.$H = t2.getHours(), this.$m = t2.getMinutes(), this.$s = t2.getSeconds(), this.$ms = t2.getMilliseconds();
        }, m2.$utils = function() {
          return O;
        }, m2.isValid = function() {
          return !(this.$d.toString() === $);
        }, m2.isSame = function(t2, e2) {
          var n2 = w(t2);
          return this.startOf(e2) <= n2 && n2 <= this.endOf(e2);
        }, m2.isAfter = function(t2, e2) {
          return w(t2) < this.startOf(e2);
        }, m2.isBefore = function(t2, e2) {
          return this.endOf(e2) < w(t2);
        }, m2.$g = function(t2, e2, n2) {
          return O.u(t2) ? this[e2] : this.set(n2, t2);
        }, m2.unix = function() {
          return Math.floor(this.valueOf() / 1e3);
        }, m2.valueOf = function() {
          return this.$d.getTime();
        }, m2.startOf = function(t2, e2) {
          var n2 = this, r2 = !!O.u(e2) || e2, h2 = O.p(t2), $2 = function(t3, e3) {
            var i2 = O.w(n2.$u ? Date.UTC(n2.$y, e3, t3) : new Date(n2.$y, e3, t3), n2);
            return r2 ? i2 : i2.endOf(a);
          }, l2 = function(t3, e3) {
            return O.w(n2.toDate()[t3].apply(n2.toDate("s"), (r2 ? [0, 0, 0, 0] : [23, 59, 59, 999]).slice(e3)), n2);
          }, y2 = this.$W, M3 = this.$M, m3 = this.$D, g2 = "set" + (this.$u ? "UTC" : "");
          switch (h2) {
            case c:
              return r2 ? $2(1, 0) : $2(31, 11);
            case f:
              return r2 ? $2(1, M3) : $2(0, M3 + 1);
            case o:
              var D2 = this.$locale().weekStart || 0, v2 = (y2 < D2 ? y2 + 7 : y2) - D2;
              return $2(r2 ? m3 - v2 : m3 + (6 - v2), M3);
            case a:
            case d:
              return l2(g2 + "Hours", 0);
            case u:
              return l2(g2 + "Minutes", 1);
            case s:
              return l2(g2 + "Seconds", 2);
            case i:
              return l2(g2 + "Milliseconds", 3);
            default:
              return this.clone();
          }
        }, m2.endOf = function(t2) {
          return this.startOf(t2, false);
        }, m2.$set = function(t2, e2) {
          var n2, o2 = O.p(t2), h2 = "set" + (this.$u ? "UTC" : ""), $2 = (n2 = {}, n2[a] = h2 + "Date", n2[d] = h2 + "Date", n2[f] = h2 + "Month", n2[c] = h2 + "FullYear", n2[u] = h2 + "Hours", n2[s] = h2 + "Minutes", n2[i] = h2 + "Seconds", n2[r] = h2 + "Milliseconds", n2)[o2], l2 = o2 === a ? this.$D + (e2 - this.$W) : e2;
          if (o2 === f || o2 === c) {
            var y2 = this.clone().set(d, 1);
            y2.$d[$2](l2), y2.init(), this.$d = y2.set(d, Math.min(this.$D, y2.daysInMonth())).$d;
          } else
            $2 && this.$d[$2](l2);
          return this.init(), this;
        }, m2.set = function(t2, e2) {
          return this.clone().$set(t2, e2);
        }, m2.get = function(t2) {
          return this[O.p(t2)]();
        }, m2.add = function(r2, h2) {
          var d2, $2 = this;
          r2 = Number(r2);
          var l2 = O.p(h2), y2 = function(t2) {
            var e2 = w($2);
            return O.w(e2.date(e2.date() + Math.round(t2 * r2)), $2);
          };
          if (l2 === f)
            return this.set(f, this.$M + r2);
          if (l2 === c)
            return this.set(c, this.$y + r2);
          if (l2 === a)
            return y2(1);
          if (l2 === o)
            return y2(7);
          var M3 = (d2 = {}, d2[s] = e, d2[u] = n, d2[i] = t, d2)[l2] || 1, m3 = this.$d.getTime() + r2 * M3;
          return O.w(m3, this);
        }, m2.subtract = function(t2, e2) {
          return this.add(-1 * t2, e2);
        }, m2.format = function(t2) {
          var e2 = this, n2 = this.$locale();
          if (!this.isValid())
            return n2.invalidDate || $;
          var r2 = t2 || "YYYY-MM-DDTHH:mm:ssZ", i2 = O.z(this), s2 = this.$H, u2 = this.$m, a2 = this.$M, o2 = n2.weekdays, f2 = n2.months, h2 = function(t3, n3, i3, s3) {
            return t3 && (t3[n3] || t3(e2, r2)) || i3[n3].substr(0, s3);
          }, c2 = function(t3) {
            return O.s(s2 % 12 || 12, t3, "0");
          }, d2 = n2.meridiem || function(t3, e3, n3) {
            var r3 = t3 < 12 ? "AM" : "PM";
            return n3 ? r3.toLowerCase() : r3;
          }, l2 = { YY: String(this.$y).slice(-2), YYYY: this.$y, M: a2 + 1, MM: O.s(a2 + 1, 2, "0"), MMM: h2(n2.monthsShort, a2, f2, 3), MMMM: h2(f2, a2), D: this.$D, DD: O.s(this.$D, 2, "0"), d: String(this.$W), dd: h2(n2.weekdaysMin, this.$W, o2, 2), ddd: h2(n2.weekdaysShort, this.$W, o2, 3), dddd: o2[this.$W], H: String(s2), HH: O.s(s2, 2, "0"), h: c2(1), hh: c2(2), a: d2(s2, u2, true), A: d2(s2, u2, false), m: String(u2), mm: O.s(u2, 2, "0"), s: String(this.$s), ss: O.s(this.$s, 2, "0"), SSS: O.s(this.$ms, 3, "0"), Z: i2 };
          return r2.replace(y, function(t3, e3) {
            return e3 || l2[t3] || i2.replace(":", "");
          });
        }, m2.utcOffset = function() {
          return 15 * -Math.round(this.$d.getTimezoneOffset() / 15);
        }, m2.diff = function(r2, d2, $2) {
          var l2, y2 = O.p(d2), M3 = w(r2), m3 = (M3.utcOffset() - this.utcOffset()) * e, g2 = this - M3, D2 = O.m(this, M3);
          return D2 = (l2 = {}, l2[c] = D2 / 12, l2[f] = D2, l2[h] = D2 / 3, l2[o] = (g2 - m3) / 6048e5, l2[a] = (g2 - m3) / 864e5, l2[u] = g2 / n, l2[s] = g2 / e, l2[i] = g2 / t, l2)[y2] || g2, $2 ? D2 : O.a(D2);
        }, m2.daysInMonth = function() {
          return this.endOf(f).$D;
        }, m2.$locale = function() {
          return v[this.$L];
        }, m2.locale = function(t2, e2) {
          if (!t2)
            return this.$L;
          var n2 = this.clone(), r2 = S(t2, e2, true);
          return r2 && (n2.$L = r2), n2;
        }, m2.clone = function() {
          return O.w(this.$d, this);
        }, m2.toDate = function() {
          return new Date(this.valueOf());
        }, m2.toJSON = function() {
          return this.isValid() ? this.toISOString() : null;
        }, m2.toISOString = function() {
          return this.$d.toISOString();
        }, m2.toString = function() {
          return this.$d.toUTCString();
        }, M2;
      }(), b = _.prototype;
      return w.prototype = b, [["$ms", r], ["$s", i], ["$m", s], ["$H", u], ["$W", a], ["$M", f], ["$y", c], ["$D", d]].forEach(function(t2) {
        b[t2[1]] = function(e2) {
          return this.$g(e2, t2[0], t2[1]);
        };
      }), w.extend = function(t2, e2) {
        return t2.$i || (t2(e2, _, w), t2.$i = true), w;
      }, w.locale = S, w.isDayjs = p, w.unix = function(t2) {
        return w(1e3 * t2);
      }, w.en = v[D], w.Ls = v, w.p = {}, w;
    });
  }
});

// node_modules/@ahooksjs/use-request/es/index.js
var import_react7 = __toModule(require_react());

// node_modules/@ahooksjs/use-request/es/useAsync.js
var import_lodash = __toModule(require_lodash());
var import_lodash2 = __toModule(require_lodash2());
var import_react3 = __toModule(require_react());

// node_modules/@ahooksjs/use-request/es/utils/utils.js
function isDocumentVisible() {
  if (typeof document !== "undefined" && typeof document.visibilityState !== "undefined") {
    return document.visibilityState !== "hidden";
  }
  return true;
}
function isOnline() {
  if (typeof navigator.onLine !== "undefined") {
    return navigator.onLine;
  }
  return true;
}

// node_modules/@ahooksjs/use-request/es/utils/cache.js
var cache = new Map();
var setCache = function setCache2(key, cacheTime, data) {
  var currentCache = cache.get(key);
  if (currentCache === null || currentCache === void 0 ? void 0 : currentCache.timer) {
    clearTimeout(currentCache.timer);
  }
  var timer = void 0;
  if (cacheTime > -1) {
    timer = setTimeout(function() {
      cache["delete"](key);
    }, cacheTime);
  }
  cache.set(key, {
    data,
    timer,
    startTime: new Date().getTime()
  });
};
var getCache = function getCache2(key) {
  var currentCache = cache.get(key);
  return {
    data: currentCache === null || currentCache === void 0 ? void 0 : currentCache.data,
    startTime: currentCache === null || currentCache === void 0 ? void 0 : currentCache.startTime
  };
};

// node_modules/@ahooksjs/use-request/es/utils/limit.js
var __read = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read(arguments[i]));
  }
  return ar;
};
function limit(fn, timespan) {
  var pending = false;
  return function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    if (pending)
      return;
    pending = true;
    fn.apply(void 0, __spread(args));
    setTimeout(function() {
      pending = false;
    }, timespan);
  };
}

// node_modules/@ahooksjs/use-request/es/utils/usePersistFn.js
var import_react = __toModule(require_react());
var __read2 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread2 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read2(arguments[i]));
  }
  return ar;
};
function usePersistFn(fn) {
  var ref = (0, import_react.useRef)(function() {
    throw new Error("Cannot call an event handler while rendering.");
  });
  ref.current = fn;
  var persist = (0, import_react.useCallback)(function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    var refFn = ref.current;
    if (refFn) {
      return refFn.apply(void 0, __spread2(args));
    }
  }, [ref]);
  if (typeof fn === "function") {
    return persist;
  }
  return void 0;
}
var usePersistFn_default = usePersistFn;

// node_modules/@ahooksjs/use-request/es/utils/useUpdateEffect.js
var import_react2 = __toModule(require_react());
var useUpdateEffect = function useUpdateEffect2(effect, deps) {
  var isMounted = (0, import_react2.useRef)(false);
  (0, import_react2.useEffect)(function() {
    return function() {
      isMounted.current = false;
    };
  }, []);
  (0, import_react2.useEffect)(function() {
    if (!isMounted.current) {
      isMounted.current = true;
    } else {
      return effect();
    }
  }, deps);
};
var useUpdateEffect_default = useUpdateEffect;

// node_modules/@ahooksjs/use-request/es/utils/windowFocus.js
var listeners = [];
function subscribe(listener) {
  listeners.push(listener);
  return function unsubscribe() {
    var index = listeners.indexOf(listener);
    listeners.splice(index, 1);
  };
}
var eventsBinded = false;
if (typeof window !== "undefined" && window.addEventListener && !eventsBinded) {
  revalidate = function revalidate2() {
    if (!isDocumentVisible() || !isOnline())
      return;
    for (var i = 0; i < listeners.length; i++) {
      var listener = listeners[i];
      listener();
    }
  };
  window.addEventListener("visibilitychange", revalidate, false);
  window.addEventListener("focus", revalidate, false);
  eventsBinded = true;
}
var revalidate;
var windowFocus_default = subscribe;

// node_modules/@ahooksjs/use-request/es/utils/windowVisible.js
var listeners2 = [];
function subscribe2(listener) {
  listeners2.push(listener);
  return function unsubscribe() {
    var index = listeners2.indexOf(listener);
    listeners2.splice(index, 1);
  };
}
var eventsBinded2 = false;
if (typeof window !== "undefined" && window.addEventListener && !eventsBinded2) {
  revalidate = function revalidate2() {
    if (!isDocumentVisible())
      return;
    for (var i = 0; i < listeners2.length; i++) {
      var listener = listeners2[i];
      listener();
    }
  };
  window.addEventListener("visibilitychange", revalidate, false);
  eventsBinded2 = true;
}
var revalidate;
var windowVisible_default = subscribe2;

// node_modules/@ahooksjs/use-request/es/useAsync.js
var __assign = function() {
  __assign = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign.apply(this, arguments);
};
var __read3 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread3 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read3(arguments[i]));
  }
  return ar;
};
var DEFAULT_KEY = "AHOOKS_USE_REQUEST_DEFAULT_KEY";
var Fetch = function() {
  function Fetch2(service, config, subscribe3, initState3) {
    this.count = 0;
    this.pollingWhenVisibleFlag = false;
    this.pollingTimer = void 0;
    this.loadingDelayTimer = void 0;
    this.unsubscribe = [];
    this.that = this;
    this.state = {
      loading: false,
      params: [],
      data: void 0,
      error: void 0,
      run: this.run.bind(this.that),
      mutate: this.mutate.bind(this.that),
      refresh: this.refresh.bind(this.that),
      cancel: this.cancel.bind(this.that),
      unmount: this.unmount.bind(this.that)
    };
    this.service = service;
    this.config = config;
    this.subscribe = subscribe3;
    if (initState3) {
      this.state = __assign(__assign({}, this.state), initState3);
    }
    this.debounceRun = this.config.debounceInterval ? (0, import_lodash.default)(this._run, this.config.debounceInterval) : void 0;
    this.throttleRun = this.config.throttleInterval ? (0, import_lodash2.default)(this._run, this.config.throttleInterval) : void 0;
    this.limitRefresh = limit(this.refresh.bind(this), this.config.focusTimespan);
    if (this.config.pollingInterval) {
      this.unsubscribe.push(windowVisible_default(this.rePolling.bind(this)));
    }
    if (this.config.refreshOnWindowFocus) {
      this.unsubscribe.push(windowFocus_default(this.limitRefresh.bind(this)));
    }
  }
  Fetch2.prototype.setState = function(s) {
    if (s === void 0) {
      s = {};
    }
    this.state = __assign(__assign({}, this.state), s);
    this.subscribe(this.state);
  };
  Fetch2.prototype._run = function() {
    var _this = this;
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    if (this.pollingTimer) {
      clearTimeout(this.pollingTimer);
    }
    if (this.loadingDelayTimer) {
      clearTimeout(this.loadingDelayTimer);
    }
    this.count += 1;
    var currentCount = this.count;
    this.setState({
      loading: !this.config.loadingDelay,
      params: args
    });
    if (this.config.loadingDelay) {
      this.loadingDelayTimer = setTimeout(function() {
        _this.setState({
          loading: true
        });
      }, this.config.loadingDelay);
    }
    return this.service.apply(this, __spread3(args)).then(function(res) {
      if (currentCount !== _this.count) {
        return new Promise(function() {
        });
      }
      if (_this.loadingDelayTimer) {
        clearTimeout(_this.loadingDelayTimer);
      }
      var formattedResult = _this.config.formatResult ? _this.config.formatResult(res) : res;
      _this.setState({
        data: formattedResult,
        error: void 0,
        loading: false
      });
      if (_this.config.onSuccess) {
        _this.config.onSuccess(formattedResult, args);
      }
      return formattedResult;
    })["catch"](function(error) {
      if (currentCount !== _this.count) {
        return new Promise(function() {
        });
      }
      if (_this.loadingDelayTimer) {
        clearTimeout(_this.loadingDelayTimer);
      }
      _this.setState({
        data: void 0,
        error,
        loading: false
      });
      if (_this.config.onError) {
        _this.config.onError(error, args);
      }
      if (_this.config.throwOnError) {
        throw error;
      }
      console.error(error);
      return Promise.reject("useRequest has caught the exception, if you need to handle the exception yourself, you can set options.throwOnError to true.");
    })["finally"](function() {
      if (currentCount === _this.count) {
        if (_this.config.pollingInterval) {
          if (!isDocumentVisible() && !_this.config.pollingWhenHidden) {
            _this.pollingWhenVisibleFlag = true;
            return;
          }
          _this.pollingTimer = setTimeout(function() {
            _this._run.apply(_this, __spread3(args));
          }, _this.config.pollingInterval);
        }
      }
    });
  };
  Fetch2.prototype.run = function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    if (this.debounceRun) {
      this.debounceRun.apply(this, __spread3(args));
      return Promise.resolve(null);
    }
    if (this.throttleRun) {
      this.throttleRun.apply(this, __spread3(args));
      return Promise.resolve(null);
    }
    return this._run.apply(this, __spread3(args));
  };
  Fetch2.prototype.cancel = function() {
    if (this.debounceRun) {
      this.debounceRun.cancel();
    }
    if (this.throttleRun) {
      this.throttleRun.cancel();
    }
    if (this.loadingDelayTimer) {
      clearTimeout(this.loadingDelayTimer);
    }
    if (this.pollingTimer) {
      clearTimeout(this.pollingTimer);
    }
    this.pollingWhenVisibleFlag = false;
    this.count += 1;
    this.setState({
      loading: false
    });
  };
  Fetch2.prototype.refresh = function() {
    return this.run.apply(this, __spread3(this.state.params));
  };
  Fetch2.prototype.rePolling = function() {
    if (this.pollingWhenVisibleFlag) {
      this.pollingWhenVisibleFlag = false;
      this.refresh();
    }
  };
  Fetch2.prototype.mutate = function(data) {
    if (typeof data === "function") {
      this.setState({
        data: data(this.state.data) || {}
      });
    } else {
      this.setState({
        data
      });
    }
  };
  Fetch2.prototype.unmount = function() {
    this.cancel();
    this.unsubscribe.forEach(function(s) {
      s();
    });
  };
  return Fetch2;
}();
function useAsync(service, options) {
  var _options = options || {};
  var _a = _options.refreshDeps, refreshDeps = _a === void 0 ? [] : _a, _b = _options.manual, manual = _b === void 0 ? false : _b, _c = _options.onSuccess, onSuccess = _c === void 0 ? function() {
  } : _c, _d = _options.onError, onError = _d === void 0 ? function() {
  } : _d, _e = _options.defaultLoading, defaultLoading = _e === void 0 ? false : _e, loadingDelay = _options.loadingDelay, _f = _options.pollingInterval, pollingInterval = _f === void 0 ? 0 : _f, _g = _options.pollingWhenHidden, pollingWhenHidden = _g === void 0 ? true : _g, _h = _options.defaultParams, defaultParams = _h === void 0 ? [] : _h, _j = _options.refreshOnWindowFocus, refreshOnWindowFocus = _j === void 0 ? false : _j, _k = _options.focusTimespan, focusTimespan = _k === void 0 ? 5e3 : _k, fetchKey = _options.fetchKey, cacheKey = _options.cacheKey, _l = _options.cacheTime, cacheTime = _l === void 0 ? 5 * 60 * 1e3 : _l, _m = _options.staleTime, staleTime = _m === void 0 ? 0 : _m, debounceInterval = _options.debounceInterval, throttleInterval = _options.throttleInterval, initialData = _options.initialData, _o = _options.ready, ready = _o === void 0 ? true : _o, _p = _options.throwOnError, throwOnError = _p === void 0 ? false : _p;
  var newstFetchKey = (0, import_react3.useRef)(DEFAULT_KEY);
  var servicePersist = usePersistFn_default(service);
  var onSuccessPersist = usePersistFn_default(onSuccess);
  var onErrorPersist = usePersistFn_default(onError);
  var fetchKeyPersist = usePersistFn_default(fetchKey);
  var formatResult;
  if ("formatResult" in _options) {
    formatResult = _options.formatResult;
  }
  var formatResultPersist = usePersistFn_default(formatResult);
  var config = {
    formatResult: formatResultPersist,
    onSuccess: onSuccessPersist,
    onError: onErrorPersist,
    loadingDelay,
    pollingInterval,
    pollingWhenHidden,
    refreshOnWindowFocus: !manual && refreshOnWindowFocus,
    focusTimespan,
    debounceInterval,
    throttleInterval,
    throwOnError
  };
  var subscribe3 = usePersistFn_default(function(key, data) {
    setFetches(function(s) {
      s[key] = data;
      return __assign({}, s);
    });
  });
  var _q = __read3((0, import_react3.useState)(function() {
    var _a2;
    if (cacheKey) {
      var cacheData_1 = (_a2 = getCache(cacheKey)) === null || _a2 === void 0 ? void 0 : _a2.data;
      if (cacheData_1) {
        newstFetchKey.current = cacheData_1.newstFetchKey;
        var newFetches_1 = {};
        Object.keys(cacheData_1.fetches).forEach(function(key) {
          var cacheFetch = cacheData_1.fetches[key];
          var newFetch = new Fetch(servicePersist, config, subscribe3.bind(null, key), {
            loading: cacheFetch.loading,
            params: cacheFetch.params,
            data: cacheFetch.data,
            error: cacheFetch.error
          });
          newFetches_1[key] = newFetch.state;
        });
        return newFetches_1;
      }
    }
    return {};
  }), 2), fetches = _q[0], setFetches = _q[1];
  var fetchesRef = (0, import_react3.useRef)(fetches);
  fetchesRef.current = fetches;
  var readyMemoryParams = (0, import_react3.useRef)();
  var run = (0, import_react3.useCallback)(function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    if (!ready) {
      readyMemoryParams.current = args;
      return;
    }
    if (fetchKeyPersist) {
      var key = fetchKeyPersist.apply(void 0, __spread3(args));
      newstFetchKey.current = key === void 0 ? DEFAULT_KEY : key;
    }
    var currentFetchKey = newstFetchKey.current;
    var currentFetch = fetchesRef.current[currentFetchKey];
    if (!currentFetch) {
      var newFetch = new Fetch(servicePersist, config, subscribe3.bind(null, currentFetchKey), {
        data: initialData
      });
      currentFetch = newFetch.state;
      setFetches(function(s) {
        s[currentFetchKey] = currentFetch;
        return __assign({}, s);
      });
    }
    return currentFetch.run.apply(currentFetch, __spread3(args));
  }, [fetchKey, subscribe3, ready]);
  var runRef = (0, import_react3.useRef)(run);
  runRef.current = run;
  useUpdateEffect_default(function() {
    if (cacheKey) {
      setCache(cacheKey, cacheTime, {
        fetches,
        newstFetchKey: newstFetchKey.current
      });
    }
  }, [cacheKey, fetches]);
  var hasTriggeredByReady = (0, import_react3.useRef)(false);
  useUpdateEffect_default(function() {
    if (ready) {
      if (!hasTriggeredByReady.current && readyMemoryParams.current) {
        runRef.current.apply(runRef, __spread3(readyMemoryParams.current));
      }
      hasTriggeredByReady.current = true;
    }
  }, [ready]);
  (0, import_react3.useEffect)(function() {
    var _a2;
    if (!manual) {
      if (Object.keys(fetches).length > 0) {
        var cacheStartTime = cacheKey && ((_a2 = getCache(cacheKey)) === null || _a2 === void 0 ? void 0 : _a2.startTime) || 0;
        if (!(staleTime === -1 || new Date().getTime() - cacheStartTime <= staleTime)) {
          Object.values(fetches).forEach(function(f) {
            f.refresh();
          });
        }
      } else {
        runRef.current.apply(runRef, __spread3(defaultParams));
      }
    }
  }, []);
  var reset = (0, import_react3.useCallback)(function() {
    Object.values(fetchesRef.current).forEach(function(f) {
      f.unmount();
    });
    newstFetchKey.current = DEFAULT_KEY;
    setFetches({});
    fetchesRef.current = {};
  }, [setFetches]);
  useUpdateEffect_default(function() {
    if (!manual) {
      Object.values(fetchesRef.current).forEach(function(f) {
        f.refresh();
      });
    }
  }, __spread3(refreshDeps));
  (0, import_react3.useEffect)(function() {
    return function() {
      Object.values(fetchesRef.current).forEach(function(f) {
        f.unmount();
      });
    };
  }, []);
  var notExecutedWarning = (0, import_react3.useCallback)(function(name) {
    return function() {
      console.warn("You should't call " + name + " when service not executed once.");
    };
  }, []);
  return __assign(__assign({
    loading: ready && !manual || defaultLoading,
    data: initialData,
    error: void 0,
    params: [],
    cancel: notExecutedWarning("cancel"),
    refresh: notExecutedWarning("refresh"),
    mutate: notExecutedWarning("mutate")
  }, fetches[newstFetchKey.current] || {}), {
    run,
    fetches,
    reset
  });
}
var useAsync_default = useAsync;

// node_modules/@ahooksjs/use-request/es/useLoadMore.js
var import_react4 = __toModule(require_react());
var __assign2 = function() {
  __assign2 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign2.apply(this, arguments);
};
var __rest = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __read4 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread4 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read4(arguments[i]));
  }
  return ar;
};
function useLoadMore(service, options) {
  var _a = options.refreshDeps, refreshDeps = _a === void 0 ? [] : _a, ref = options.ref, isNoMore = options.isNoMore, _b = options.threshold, threshold = _b === void 0 ? 100 : _b, fetchKey = options.fetchKey, restOptions = __rest(options, ["refreshDeps", "ref", "isNoMore", "threshold", "fetchKey"]);
  var _c = __read4((0, import_react4.useState)(false), 2), loadingMore = _c[0], setLoadingMore = _c[1];
  (0, import_react4.useEffect)(function() {
    if (options.fetchKey) {
      console.warn("useRequest loadMore mode don't need fetchKey!");
    }
  }, []);
  var result = useAsync_default(service, __assign2(__assign2({}, restOptions), {
    fetchKey: function fetchKey2(d) {
      var _a2;
      return ((_a2 = d === null || d === void 0 ? void 0 : d.list) === null || _a2 === void 0 ? void 0 : _a2.length) || 0;
    },
    onSuccess: function onSuccess() {
      var params2 = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        params2[_i] = arguments[_i];
      }
      setLoadingMore(false);
      if (options.onSuccess) {
        options.onSuccess.apply(options, __spread4(params2));
      }
    }
  }));
  var data = result.data, run = result.run, params = result.params, reset = result.reset, loading = result.loading, fetches = result.fetches;
  var reload = (0, import_react4.useCallback)(function() {
    reset();
    var _a2 = __read4(params), restParams = _a2.slice(1);
    run.apply(void 0, __spread4([void 0], restParams));
  }, [run, reset, params]);
  var reloadRef = (0, import_react4.useRef)(reload);
  reloadRef.current = reload;
  useUpdateEffect_default(function() {
    if (!options.manual) {
      reloadRef.current();
    }
  }, __spread4(refreshDeps));
  var dataGroup = (0, import_react4.useMemo)(function() {
    var listGroup = [];
    var lastNoLoadingData = data;
    Object.values(fetches).forEach(function(h) {
      var _a2, _b2;
      if ((_a2 = h.data) === null || _a2 === void 0 ? void 0 : _a2.list) {
        listGroup = listGroup.concat((_b2 = h.data) === null || _b2 === void 0 ? void 0 : _b2.list);
      }
      if (!h.loading) {
        lastNoLoadingData = h.data;
      }
    });
    return __assign2(__assign2({}, lastNoLoadingData), {
      list: listGroup
    });
  }, [fetches, data]);
  var noMore = isNoMore ? !loading && !loadingMore && isNoMore(dataGroup) : false;
  var loadMore = (0, import_react4.useCallback)(function() {
    if (noMore) {
      return;
    }
    setLoadingMore(true);
    var _a2 = __read4(params), restParams = _a2.slice(1);
    run.apply(void 0, __spread4([dataGroup], restParams));
  }, [noMore, run, dataGroup, params]);
  var scrollMethod = function scrollMethod2() {
    if (loading || loadingMore || !ref || !ref.current) {
      return;
    }
    if (ref.current.scrollHeight - ref.current.scrollTop <= ref.current.clientHeight + threshold) {
      loadMore();
    }
  };
  var scrollMethodRef = (0, import_react4.useRef)(scrollMethod);
  scrollMethodRef.current = scrollMethod;
  (0, import_react4.useEffect)(function() {
    if (!ref || !ref.current) {
      return function() {
      };
    }
    var scrollTrigger = function scrollTrigger2() {
      return scrollMethodRef.current();
    };
    ref.current.addEventListener("scroll", scrollTrigger);
    return function() {
      if (ref && ref.current) {
        ref.current.removeEventListener("scroll", scrollTrigger);
      }
    };
  }, [scrollMethodRef]);
  return __assign2(__assign2({}, result), {
    data: dataGroup,
    reload,
    loading: loading && dataGroup.list.length === 0,
    loadMore,
    loadingMore,
    noMore
  });
}
var useLoadMore_default = useLoadMore;

// node_modules/@ahooksjs/use-request/es/usePaginated.js
var import_react5 = __toModule(require_react());
var __assign3 = function() {
  __assign3 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign3.apply(this, arguments);
};
var __rest2 = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __read5 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread5 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read5(arguments[i]));
  }
  return ar;
};
function usePaginated(service, options) {
  var paginated = options.paginated, _a = options.defaultPageSize, defaultPageSize = _a === void 0 ? 10 : _a, _b = options.refreshDeps, refreshDeps = _b === void 0 ? [] : _b, fetchKey = options.fetchKey, restOptions = __rest2(options, ["paginated", "defaultPageSize", "refreshDeps", "fetchKey"]);
  (0, import_react5.useEffect)(function() {
    if (fetchKey) {
      console.error("useRequest pagination's fetchKey will not work!");
    }
  }, []);
  var _c = useAsync_default(service, __assign3({
    defaultParams: [{
      current: 1,
      pageSize: defaultPageSize
    }]
  }, restOptions)), data = _c.data, params = _c.params, run = _c.run, loading = _c.loading, rest = __rest2(_c, ["data", "params", "run", "loading"]);
  var _d = params && params[0] ? params[0] : {}, _e = _d.current, current = _e === void 0 ? 1 : _e, _f = _d.pageSize, pageSize = _f === void 0 ? defaultPageSize : _f, _g = _d.sorter, sorter = _g === void 0 ? {} : _g, _h = _d.filters, filters = _h === void 0 ? {} : _h;
  var runChangePagination = (0, import_react5.useCallback)(function(paginationParams) {
    var _a2 = __read5(params), oldPaginationParams = _a2[0], restParams = _a2.slice(1);
    run.apply(void 0, __spread5([__assign3(__assign3({}, oldPaginationParams), paginationParams)], restParams));
  }, [run, params]);
  var total = (data === null || data === void 0 ? void 0 : data.total) || 0;
  var totalPage = (0, import_react5.useMemo)(function() {
    return Math.ceil(total / pageSize);
  }, [pageSize, total]);
  var onChange = (0, import_react5.useCallback)(function(c, p) {
    var toCurrent = c <= 0 ? 1 : c;
    var toPageSize = p <= 0 ? 1 : p;
    var tempTotalPage = Math.ceil(total / toPageSize);
    if (toCurrent > tempTotalPage) {
      toCurrent = tempTotalPage;
    }
    runChangePagination({
      current: c,
      pageSize: p
    });
  }, [total, runChangePagination]);
  var changeCurrent = (0, import_react5.useCallback)(function(c) {
    onChange(c, pageSize);
  }, [onChange, pageSize]);
  var changePageSize = (0, import_react5.useCallback)(function(p) {
    onChange(current, p);
  }, [onChange, current]);
  var changeCurrentRef = (0, import_react5.useRef)(changeCurrent);
  changeCurrentRef.current = changeCurrent;
  useUpdateEffect_default(function() {
    if (!options.manual) {
      changeCurrentRef.current(1);
    }
  }, __spread5(refreshDeps));
  var changeTable = (0, import_react5.useCallback)(function(p, f, s) {
    runChangePagination({
      current: p.current,
      pageSize: p.pageSize || defaultPageSize,
      filters: f,
      sorter: s
    });
  }, [filters, sorter, runChangePagination]);
  return __assign3({
    loading,
    data,
    params,
    run,
    pagination: {
      current,
      pageSize,
      total,
      totalPage,
      onChange,
      changeCurrent,
      changePageSize
    },
    tableProps: {
      dataSource: (data === null || data === void 0 ? void 0 : data.list) || [],
      loading,
      onChange: changeTable,
      pagination: {
        current,
        pageSize,
        total
      }
    },
    sorter,
    filters
  }, rest);
}
var usePaginated_default = usePaginated;

// node_modules/@ahooksjs/use-request/es/configContext.js
var import_react6 = __toModule(require_react());
var ConfigContext = import_react6.default.createContext({});
ConfigContext.displayName = "UseRequestConfigContext";
var configContext_default = ConfigContext;

// node_modules/@ahooksjs/use-request/es/index.js
var __assign4 = function() {
  __assign4 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign4.apply(this, arguments);
};
var __rest3 = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __read6 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread6 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read6(arguments[i]));
  }
  return ar;
};
function useRequest(service, options) {
  if (options === void 0) {
    options = {};
  }
  var contextConfig = (0, import_react7.useContext)(configContext_default);
  var finalOptions = __assign4(__assign4({}, contextConfig), options);
  var paginated = finalOptions.paginated, loadMore = finalOptions.loadMore, requestMethod = finalOptions.requestMethod;
  var paginatedRef = (0, import_react7.useRef)(paginated);
  var loadMoreRef = (0, import_react7.useRef)(loadMore);
  if (paginatedRef.current !== paginated) {
    throw Error("You should not modify the paginated of options");
  }
  if (loadMoreRef.current !== loadMore) {
    throw Error("You should not modify the loadMore of options");
  }
  paginatedRef.current = paginated;
  loadMoreRef.current = loadMore;
  var fetchProxy = function fetchProxy2() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    return fetch.apply(void 0, __spread6(args)).then(function(res) {
      if (res.ok) {
        return res.json();
      }
      throw new Error(res.statusText);
    });
  };
  var finalRequestMethod = requestMethod || fetchProxy;
  var promiseService;
  switch (typeof service) {
    case "string":
      promiseService = function promiseService2() {
        return finalRequestMethod(service);
      };
      break;
    case "object":
      var url_1 = service.url, rest_1 = __rest3(service, ["url"]);
      promiseService = function promiseService2() {
        return requestMethod ? requestMethod(service) : fetchProxy(url_1, rest_1);
      };
      break;
    default:
      promiseService = function promiseService2() {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
        }
        return new Promise(function(resolve, reject) {
          var s = service.apply(void 0, __spread6(args));
          var fn = s;
          if (!s.then) {
            switch (typeof s) {
              case "string":
                fn = finalRequestMethod(s);
                break;
              case "object":
                var url_2 = s.url, rest_2 = __rest3(s, ["url"]);
                fn = requestMethod ? requestMethod(s) : fetchProxy(url_2, rest_2);
                break;
            }
          }
          fn.then(resolve)["catch"](reject);
        });
      };
  }
  if (loadMore) {
    return useLoadMore_default(promiseService, finalOptions);
  }
  if (paginated) {
    return usePaginated_default(promiseService, finalOptions);
  }
  return useAsync_default(promiseService, finalOptions);
}
var UseRequestProvider = configContext_default.Provider;
var es_default = useRequest;

// node_modules/ahooks/es/useControllableValue/index.js
var import_react9 = __toModule(require_react());

// node_modules/ahooks/es/useUpdateEffect/index.js
var import_react8 = __toModule(require_react());
var useUpdateEffect3 = function useUpdateEffect4(effect, deps) {
  var isMounted = (0, import_react8.useRef)(false);
  (0, import_react8.useEffect)(function() {
    if (!isMounted.current) {
      isMounted.current = true;
    } else {
      return effect();
    }
  }, deps);
};
var useUpdateEffect_default2 = useUpdateEffect3;

// node_modules/ahooks/es/useControllableValue/index.js
var __read7 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread7 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read7(arguments[i]));
  }
  return ar;
};
function useControllableValue(props, options) {
  if (props === void 0) {
    props = {};
  }
  if (options === void 0) {
    options = {};
  }
  var defaultValue = options.defaultValue, _a = options.defaultValuePropName, defaultValuePropName = _a === void 0 ? "defaultValue" : _a, _b = options.valuePropName, valuePropName = _b === void 0 ? "value" : _b, _c = options.trigger, trigger = _c === void 0 ? "onChange" : _c;
  var value = props[valuePropName];
  var _d = __read7((0, import_react9.useState)(function() {
    if (valuePropName in props) {
      return value;
    }
    if (defaultValuePropName in props) {
      return props[defaultValuePropName];
    }
    return defaultValue;
  }), 2), state = _d[0], setState = _d[1];
  useUpdateEffect_default2(function() {
    if (valuePropName in props) {
      setState(value);
    }
  }, [value, valuePropName]);
  var handleSetState = (0, import_react9.useCallback)(function(v) {
    var args = [];
    for (var _i = 1; _i < arguments.length; _i++) {
      args[_i - 1] = arguments[_i];
    }
    if (!(valuePropName in props)) {
      setState(v);
    }
    if (props[trigger]) {
      props[trigger].apply(props, __spread7([v], args));
    }
  }, [props, valuePropName, trigger]);
  return [valuePropName in props ? value : state, handleSetState];
}
var useControllableValue_default = useControllableValue;

// node_modules/ahooks/es/useDynamicList/index.js
var import_react10 = __toModule(require_react());
var __read8 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread8 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read8(arguments[i]));
  }
  return ar;
};
var useDynamicList_default = function(initialValue) {
  var counterRef = (0, import_react10.useRef)(-1);
  var keyList = (0, import_react10.useRef)([]);
  var setKey = (0, import_react10.useCallback)(function(index) {
    counterRef.current += 1;
    keyList.current.splice(index, 0, counterRef.current);
  }, []);
  var _a = __read8((0, import_react10.useState)(function() {
    (initialValue || []).forEach(function(_, index) {
      setKey(index);
    });
    return initialValue || [];
  }), 2), list = _a[0], setList = _a[1];
  var resetList = (0, import_react10.useCallback)(function(newList) {
    if (newList === void 0) {
      newList = [];
    }
    keyList.current = [];
    setList(function() {
      (newList || []).forEach(function(_, index) {
        setKey(index);
      });
      return newList || [];
    });
  }, []);
  var insert = (0, import_react10.useCallback)(function(index, obj) {
    setList(function(l) {
      var temp = __spread8(l);
      temp.splice(index, 0, obj);
      setKey(index);
      return temp;
    });
  }, []);
  var getKey = (0, import_react10.useCallback)(function(index) {
    return keyList.current[index];
  }, []);
  var getIndex = (0, import_react10.useCallback)(function(key) {
    return keyList.current.findIndex(function(ele) {
      return ele === key;
    });
  }, []);
  var merge = (0, import_react10.useCallback)(function(index, obj) {
    setList(function(l) {
      var temp = __spread8(l);
      obj.forEach(function(_, i) {
        setKey(index + i);
      });
      temp.splice.apply(temp, __spread8([index, 0], obj));
      return temp;
    });
  }, []);
  var replace = (0, import_react10.useCallback)(function(index, obj) {
    setList(function(l) {
      var temp = __spread8(l);
      temp[index] = obj;
      return temp;
    });
  }, []);
  var remove = (0, import_react10.useCallback)(function(index) {
    setList(function(l) {
      var temp = __spread8(l);
      temp.splice(index, 1);
      try {
        keyList.current.splice(index, 1);
      } catch (e) {
        console.error(e);
      }
      return temp;
    });
  }, []);
  var move = (0, import_react10.useCallback)(function(oldIndex, newIndex) {
    if (oldIndex === newIndex) {
      return;
    }
    setList(function(l) {
      var newList = __spread8(l);
      var temp = newList.filter(function(_, index) {
        return index !== oldIndex;
      });
      temp.splice(newIndex, 0, newList[oldIndex]);
      try {
        var keyTemp = keyList.current.filter(function(_, index) {
          return index !== oldIndex;
        });
        keyTemp.splice(newIndex, 0, keyList.current[oldIndex]);
        keyList.current = keyTemp;
      } catch (e) {
        console.error(e);
      }
      return temp;
    });
  }, []);
  var push = (0, import_react10.useCallback)(function(obj) {
    setList(function(l) {
      setKey(l.length);
      return l.concat([obj]);
    });
  }, []);
  var pop = (0, import_react10.useCallback)(function() {
    try {
      keyList.current = keyList.current.slice(0, keyList.current.length - 1);
    } catch (e) {
      console.error(e);
    }
    setList(function(l) {
      return l.slice(0, l.length - 1);
    });
  }, []);
  var unshift = (0, import_react10.useCallback)(function(obj) {
    setList(function(l) {
      setKey(0);
      return [obj].concat(l);
    });
  }, []);
  var sortForm = (0, import_react10.useCallback)(function(result) {
    return result.map(function(item, index) {
      return {
        key: index,
        item
      };
    }).sort(function(a, b) {
      return getIndex(a.key) - getIndex(b.key);
    }).filter(function(item) {
      return !!item.item;
    }).map(function(item) {
      return item.item;
    });
  }, []);
  var shift2 = (0, import_react10.useCallback)(function() {
    try {
      keyList.current = keyList.current.slice(1, keyList.current.length);
    } catch (e) {
      console.error(e);
    }
    setList(function(l) {
      return l.slice(1, l.length);
    });
  }, []);
  return {
    list,
    insert,
    merge,
    replace,
    remove,
    getKey,
    getIndex,
    move,
    push,
    pop,
    unshift,
    shift: shift2,
    sortForm,
    resetList
  };
};

// node_modules/ahooks/es/useEventEmitter/index.js
var import_react11 = __toModule(require_react());
var __values = function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function next() {
        if (o && i >= o.length)
          o = void 0;
        return {
          value: o && o[i++],
          done: !o
        };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var EventEmitter = function() {
  function EventEmitter2() {
    var _this = this;
    this.subscriptions = new Set();
    this.emit = function(val) {
      var e_1, _a;
      try {
        for (var _b = __values(_this.subscriptions), _c = _b.next(); !_c.done; _c = _b.next()) {
          var subscription = _c.value;
          subscription(val);
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (_c && !_c.done && (_a = _b["return"]))
            _a.call(_b);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
    };
    this.useSubscription = function(callback) {
      var callbackRef = (0, import_react11.useRef)();
      callbackRef.current = callback;
      (0, import_react11.useEffect)(function() {
        function subscription(val) {
          if (callbackRef.current) {
            callbackRef.current(val);
          }
        }
        _this.subscriptions.add(subscription);
        return function() {
          _this.subscriptions["delete"](subscription);
        };
      }, []);
    };
  }
  return EventEmitter2;
}();
function useEventEmitter() {
  var ref = (0, import_react11.useRef)();
  if (!ref.current) {
    ref.current = new EventEmitter();
  }
  return ref.current;
}

// node_modules/ahooks/es/useVirtualList/index.js
var import_react16 = __toModule(require_react());

// node_modules/ahooks/es/useSize/index.js
var import_react15 = __toModule(require_react());

// node_modules/ahooks/es/utils/dom.js
function getTargetElement(target, defaultElement) {
  if (!target) {
    return defaultElement;
  }
  var targetElement;
  if (typeof target === "function") {
    targetElement = target();
  } else if ("current" in target) {
    targetElement = target.current;
  } else {
    targetElement = target;
  }
  return targetElement;
}

// node_modules/ahooks/es/useSize/useRafState.js
var import_react14 = __toModule(require_react());

// node_modules/ahooks/es/useUnmount/index.js
var import_react13 = __toModule(require_react());

// node_modules/ahooks/es/usePersistFn/index.js
var import_react12 = __toModule(require_react());
function usePersistFn2(fn) {
  var fnRef = (0, import_react12.useRef)(fn);
  fnRef.current = fn;
  var persistFn = (0, import_react12.useRef)();
  if (!persistFn.current) {
    persistFn.current = function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return fnRef.current.apply(this, args);
    };
  }
  return persistFn.current;
}
var usePersistFn_default2 = usePersistFn2;

// node_modules/ahooks/es/utils/index.js
function isFunction(obj) {
  return typeof obj === "function";
}

// node_modules/ahooks/es/useUnmount/index.js
var useUnmount = function useUnmount2(fn) {
  var fnPersist = usePersistFn_default2(fn);
  (0, import_react13.useEffect)(function() {
    return function() {
      if (isFunction(fnPersist)) {
        fnPersist();
      }
    };
  }, []);
};
var useUnmount_default = useUnmount;

// node_modules/ahooks/es/useSize/useRafState.js
var __read9 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var useRafState = function useRafState2(initialState) {
  var frame = (0, import_react14.useRef)(0);
  var _a = __read9((0, import_react14.useState)(initialState), 2), state = _a[0], setState = _a[1];
  var setRafState = (0, import_react14.useCallback)(function(value) {
    cancelAnimationFrame(frame.current);
    frame.current = requestAnimationFrame(function() {
      setState(value);
    });
  }, []);
  useUnmount_default(function() {
    cancelAnimationFrame(frame.current);
  });
  return [state, setRafState];
};
var useRafState_default = useRafState;

// node_modules/ahooks/es/useSize/index.js
var __read10 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useSize(target) {
  var _a = __read10(useRafState_default(function() {
    var el = getTargetElement(target);
    return {
      width: (el || {}).clientWidth,
      height: (el || {}).clientHeight
    };
  }), 2), state = _a[0], setState = _a[1];
  (0, import_react15.useLayoutEffect)(function() {
    var el = getTargetElement(target);
    if (!el) {
      return function() {
      };
    }
    var resizeObserver = new ResizeObserver_es_default(function(entries) {
      entries.forEach(function(entry) {
        setState({
          width: entry.target.clientWidth,
          height: entry.target.clientHeight
        });
      });
    });
    resizeObserver.observe(el);
    return function() {
      resizeObserver.disconnect();
    };
  }, [target]);
  return state;
}
var useSize_default = useSize;

// node_modules/ahooks/es/useVirtualList/index.js
var __read11 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var useVirtualList_default = function(list, options) {
  var containerRef = (0, import_react16.useRef)();
  var size = useSize_default(containerRef);
  var _a = __read11((0, import_react16.useState)({
    start: 0,
    end: 10
  }), 2), state = _a[0], setState = _a[1];
  var itemHeight = options.itemHeight, _b = options.overscan, overscan = _b === void 0 ? 5 : _b;
  if (!itemHeight) {
    console.warn("please enter a valid itemHeight");
  }
  var getViewCapacity = function getViewCapacity2(containerHeight) {
    if (typeof itemHeight === "number") {
      return Math.ceil(containerHeight / itemHeight);
    }
    var _a2 = state.start, start = _a2 === void 0 ? 0 : _a2;
    var sum = 0;
    var capacity = 0;
    for (var i = start; i < list.length; i++) {
      var height = itemHeight(i);
      sum += height;
      if (sum >= containerHeight) {
        capacity = i;
        break;
      }
    }
    return capacity - start;
  };
  var getOffset = function getOffset2(scrollTop) {
    if (typeof itemHeight === "number") {
      return Math.floor(scrollTop / itemHeight) + 1;
    }
    var sum = 0;
    var offset = 0;
    for (var i = 0; i < list.length; i++) {
      var height = itemHeight(i);
      sum += height;
      if (sum >= scrollTop) {
        offset = i;
        break;
      }
    }
    return offset + 1;
  };
  var calculateRange = function calculateRange2() {
    var element = containerRef.current;
    if (element) {
      var offset = getOffset(element.scrollTop);
      var viewCapacity = getViewCapacity(element.clientHeight);
      var from = offset - overscan;
      var to = offset + viewCapacity + overscan;
      setState({
        start: from < 0 ? 0 : from,
        end: to > list.length ? list.length : to
      });
    }
  };
  (0, import_react16.useEffect)(function() {
    calculateRange();
  }, [size.width, size.height, list.length]);
  var totalHeight = (0, import_react16.useMemo)(function() {
    if (typeof itemHeight === "number") {
      return list.length * itemHeight;
    }
    return list.reduce(function(sum, _, index) {
      return sum + itemHeight(index);
    }, 0);
  }, [list.length]);
  var getDistanceTop = function getDistanceTop2(index) {
    if (typeof itemHeight === "number") {
      var height_1 = index * itemHeight;
      return height_1;
    }
    var height = list.slice(0, index).reduce(function(sum, _, i) {
      return sum + itemHeight(i);
    }, 0);
    return height;
  };
  var scrollTo = function scrollTo2(index) {
    if (containerRef.current) {
      containerRef.current.scrollTop = getDistanceTop(index);
      calculateRange();
    }
  };
  var offsetTop = (0, import_react16.useMemo)(function() {
    return getDistanceTop(state.start);
  }, [state.start]);
  return {
    list: list.slice(state.start, state.end).map(function(ele, index) {
      return {
        data: ele,
        index: index + state.start
      };
    }),
    scrollTo,
    containerProps: {
      ref: function ref(ele) {
        containerRef.current = ele;
      },
      onScroll: function onScroll(e) {
        e.preventDefault();
        calculateRange();
      },
      style: {
        overflowY: "auto"
      }
    },
    wrapperProps: {
      style: {
        width: "100%",
        height: totalHeight - offsetTop,
        marginTop: offsetTop
      }
    }
  };
};

// node_modules/ahooks/es/useResponsive/index.js
var import_react17 = __toModule(require_react());
var __values2 = function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function next() {
        if (o && i >= o.length)
          o = void 0;
        return {
          value: o && o[i++],
          done: !o
        };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __read12 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var subscribers = new Set();
var info;
var responsiveConfig = {
  xs: 0,
  sm: 576,
  md: 768,
  lg: 992,
  xl: 1200
};
function handleResize() {
  var e_1, _a;
  var oldInfo = info;
  calculate();
  if (oldInfo === info)
    return;
  try {
    for (var subscribers_1 = __values2(subscribers), subscribers_1_1 = subscribers_1.next(); !subscribers_1_1.done; subscribers_1_1 = subscribers_1.next()) {
      var subscriber = subscribers_1_1.value;
      subscriber();
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (subscribers_1_1 && !subscribers_1_1.done && (_a = subscribers_1["return"]))
        _a.call(subscribers_1);
    } finally {
      if (e_1)
        throw e_1.error;
    }
  }
}
var listening = false;
function calculate() {
  var e_2, _a;
  var width = window.innerWidth;
  var newInfo = {};
  var shouldUpdate = false;
  try {
    for (var _b = __values2(Object.keys(responsiveConfig)), _c = _b.next(); !_c.done; _c = _b.next()) {
      var key = _c.value;
      newInfo[key] = width >= responsiveConfig[key];
      if (newInfo[key] !== info[key]) {
        shouldUpdate = true;
      }
    }
  } catch (e_2_1) {
    e_2 = {
      error: e_2_1
    };
  } finally {
    try {
      if (_c && !_c.done && (_a = _b["return"]))
        _a.call(_b);
    } finally {
      if (e_2)
        throw e_2.error;
    }
  }
  if (shouldUpdate) {
    info = newInfo;
  }
}
function configResponsive(config) {
  responsiveConfig = config;
  if (info)
    calculate();
}
function useResponsive() {
  var windowExists = typeof window !== "undefined";
  if (windowExists && !listening) {
    info = {};
    calculate();
    window.addEventListener("resize", handleResize);
    listening = true;
  }
  var _a = __read12((0, import_react17.useState)(info), 2), state = _a[0], setState = _a[1];
  (0, import_react17.useEffect)(function() {
    if (!windowExists)
      return;
    var subscriber = function subscriber2() {
      setState(info);
    };
    subscribers.add(subscriber);
    return function() {
      subscribers["delete"](subscriber);
      if (subscribers.size === 0) {
        window.removeEventListener("resize", handleResize);
        listening = false;
      }
    };
  }, []);
  return state;
}

// node_modules/ahooks/es/createUseStorageState/index.js
var import_react18 = __toModule(require_react());
var __read13 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function isFunction2(obj) {
  return typeof obj === "function";
}
function createUseStorageState(nullishStorage) {
  function useStorageState(key, defaultValue) {
    var storage = nullishStorage;
    var _a = __read13((0, import_react18.useState)(function() {
      return getStoredValue();
    }), 2), state = _a[0], setState = _a[1];
    useUpdateEffect_default2(function() {
      setState(getStoredValue());
    }, [key]);
    function getStoredValue() {
      var raw = storage.getItem(key);
      if (raw) {
        try {
          return JSON.parse(raw);
        } catch (e) {
        }
      }
      if (isFunction2(defaultValue)) {
        return defaultValue();
      }
      return defaultValue;
    }
    var updateState = (0, import_react18.useCallback)(function(value) {
      if (typeof value === "undefined") {
        storage.removeItem(key);
        setState(void 0);
      } else if (isFunction2(value)) {
        var previousState = getStoredValue();
        var currentState = value(previousState);
        storage.setItem(key, JSON.stringify(currentState));
        setState(currentState);
      } else {
        storage.setItem(key, JSON.stringify(value));
        setState(value);
      }
    }, [key]);
    return [state, updateState];
  }
  if (!nullishStorage) {
    return function(_, defaultValue) {
      return [isFunction2(defaultValue) ? defaultValue() : defaultValue, function() {
      }];
    };
  }
  return useStorageState;
}

// node_modules/ahooks/es/useLocalStorageState/index.js
var useLocalStorageState = createUseStorageState(typeof window === "object" ? window.localStorage : null);
var useLocalStorageState_default = useLocalStorageState;

// node_modules/ahooks/es/useSessionStorageState/index.js
var useSessionStorageState = createUseStorageState(typeof window === "object" ? window.sessionStorage : null);
var useSessionStorageState_default = useSessionStorageState;

// node_modules/ahooks/es/useUpdateLayoutEffect/index.js
var import_react19 = __toModule(require_react());
var useUpdateLayoutEffect = function useUpdateLayoutEffect2(effect, deps) {
  var isMounted = (0, import_react19.useRef)(false);
  (0, import_react19.useLayoutEffect)(function() {
    if (!isMounted.current) {
      isMounted.current = true;
    } else {
      return effect();
    }
  }, deps);
};
var useUpdateLayoutEffect_default = useUpdateLayoutEffect;

// node_modules/ahooks/es/useBoolean/index.js
var import_react21 = __toModule(require_react());

// node_modules/ahooks/es/useToggle/index.js
var import_react20 = __toModule(require_react());
var __read14 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useToggle(defaultValue, reverseValue) {
  if (defaultValue === void 0) {
    defaultValue = false;
  }
  var _a = __read14((0, import_react20.useState)(defaultValue), 2), state = _a[0], setState = _a[1];
  var actions = (0, import_react20.useMemo)(function() {
    var reverseValueOrigin = reverseValue === void 0 ? !defaultValue : reverseValue;
    var toggle = function toggle2(value) {
      if (value !== void 0) {
        setState(value);
        return;
      }
      setState(function(s) {
        return s === defaultValue ? reverseValueOrigin : defaultValue;
      });
    };
    var setLeft = function setLeft2() {
      return setState(defaultValue);
    };
    var setRight = function setRight2() {
      return setState(reverseValueOrigin);
    };
    return {
      toggle,
      setLeft,
      setRight
    };
  }, [defaultValue, reverseValue]);
  return [state, actions];
}
var useToggle_default = useToggle;

// node_modules/ahooks/es/useBoolean/index.js
var __read15 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useBoolean(defaultValue) {
  if (defaultValue === void 0) {
    defaultValue = false;
  }
  var _a = __read15(useToggle_default(defaultValue), 2), state = _a[0], toggle = _a[1].toggle;
  var actions = (0, import_react21.useMemo)(function() {
    var setTrue = function setTrue2() {
      return toggle(true);
    };
    var setFalse = function setFalse2() {
      return toggle(false);
    };
    return {
      toggle,
      setTrue,
      setFalse
    };
  }, [toggle]);
  return [state, actions];
}

// node_modules/ahooks/es/useDocumentVisibility/index.js
var import_react23 = __toModule(require_react());

// node_modules/ahooks/es/useEventListener/index.js
var import_react22 = __toModule(require_react());
function useEventListener(eventName, handler, options) {
  if (options === void 0) {
    options = {};
  }
  var handlerRef = (0, import_react22.useRef)();
  handlerRef.current = handler;
  (0, import_react22.useEffect)(function() {
    var targetElement = getTargetElement(options.target, window);
    if (!targetElement.addEventListener) {
      return;
    }
    var eventListener = function eventListener2(event) {
      return handlerRef.current && handlerRef.current(event);
    };
    targetElement.addEventListener(eventName, eventListener, {
      capture: options.capture,
      once: options.once,
      passive: options.passive
    });
    return function() {
      targetElement.removeEventListener(eventName, eventListener, {
        capture: options.capture
      });
    };
  }, [eventName, options.target, options.capture, options.once, options.passive]);
}
var useEventListener_default = useEventListener;

// node_modules/ahooks/es/utils/canUseDom.js
function canUseDom() {
  return !!(typeof window !== "undefined" && window.document && window.document.createElement);
}

// node_modules/ahooks/es/useDocumentVisibility/index.js
var __read16 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var getVisibility = function getVisibility2() {
  if (!canUseDom())
    return "visible";
  return document.visibilityState;
};
function useDocumentVisibility() {
  var _a = __read16((0, import_react23.useState)(function() {
    return getVisibility();
  }), 2), documentVisibility = _a[0], setDocumentVisibility = _a[1];
  useEventListener_default("visibilitychange", function() {
    setDocumentVisibility(getVisibility());
  }, {
    target: function target() {
      return document;
    }
  });
  return documentVisibility;
}
var useDocumentVisibility_default = useDocumentVisibility;

// node_modules/ahooks/es/useSelections/index.js
var import_react24 = __toModule(require_react());
var __assign5 = function() {
  __assign5 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign5.apply(this, arguments);
};
var __read17 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useSelections(items, defaultSelected) {
  if (defaultSelected === void 0) {
    defaultSelected = [];
  }
  var _a = __read17((0, import_react24.useState)(defaultSelected), 2), selected = _a[0], setSelected = _a[1];
  var selectedSet = (0, import_react24.useMemo)(function() {
    return new Set(selected);
  }, [selected]);
  var singleActions = (0, import_react24.useMemo)(function() {
    var isSelected = function isSelected2(item) {
      return selectedSet.has(item);
    };
    var select = function select2(item) {
      selectedSet.add(item);
      return setSelected(Array.from(selectedSet));
    };
    var unSelect = function unSelect2(item) {
      selectedSet["delete"](item);
      return setSelected(Array.from(selectedSet));
    };
    var toggle = function toggle2(item) {
      if (isSelected(item)) {
        unSelect(item);
      } else {
        select(item);
      }
    };
    return {
      isSelected,
      select,
      unSelect,
      toggle
    };
  }, [selectedSet]);
  var allActions = (0, import_react24.useMemo)(function() {
    var selectAll = function selectAll2() {
      items.forEach(function(o) {
        selectedSet.add(o);
      });
      setSelected(Array.from(selectedSet));
    };
    var unSelectAll = function unSelectAll2() {
      items.forEach(function(o) {
        selectedSet["delete"](o);
      });
      setSelected(Array.from(selectedSet));
    };
    var noneSelected = items.every(function(o) {
      return !selectedSet.has(o);
    });
    var allSelected = items.every(function(o) {
      return selectedSet.has(o);
    }) && !noneSelected;
    var partiallySelected = !noneSelected && !allSelected;
    var toggleAll = function toggleAll2() {
      return allSelected ? unSelectAll() : selectAll();
    };
    return {
      selectAll,
      unSelectAll,
      noneSelected,
      allSelected,
      partiallySelected,
      toggleAll
    };
  }, [selectedSet, items]);
  return __assign5(__assign5({
    selected,
    setSelected
  }, singleActions), allActions);
}

// node_modules/ahooks/es/useThrottle/index.js
var import_react27 = __toModule(require_react());

// node_modules/ahooks/es/useThrottleFn/index.js
var import_lodash3 = __toModule(require_lodash2());
var import_react26 = __toModule(require_react());

// node_modules/ahooks/es/useCreation/index.js
var import_react25 = __toModule(require_react());
function useCreation(factory, deps) {
  var current = (0, import_react25.useRef)({
    deps,
    obj: void 0,
    initialized: false
  }).current;
  if (current.initialized === false || !depsAreSame(current.deps, deps)) {
    current.deps = deps;
    current.obj = factory();
    current.initialized = true;
  }
  return current.obj;
}
function depsAreSame(oldDeps, deps) {
  if (oldDeps === deps)
    return true;
  for (var i = 0; i < oldDeps.length; i++) {
    if (oldDeps[i] !== deps[i])
      return false;
  }
  return true;
}

// node_modules/ahooks/es/useThrottleFn/index.js
var __read18 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread9 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read18(arguments[i]));
  }
  return ar;
};
function useThrottleFn(fn, options) {
  var _a;
  var fnRef = (0, import_react26.useRef)(fn);
  fnRef.current = fn;
  var wait = (_a = options === null || options === void 0 ? void 0 : options.wait) !== null && _a !== void 0 ? _a : 1e3;
  var throttled = useCreation(function() {
    return (0, import_lodash3.default)(function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return fnRef.current.apply(fnRef, __spread9(args));
    }, wait, options);
  }, []);
  useUnmount_default(function() {
    throttled.cancel();
  });
  return {
    run: throttled,
    cancel: throttled.cancel,
    flush: throttled.flush
  };
}
var useThrottleFn_default = useThrottleFn;

// node_modules/ahooks/es/useThrottle/index.js
var __read19 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useThrottle(value, options) {
  var _a = __read19((0, import_react27.useState)(value), 2), throttled = _a[0], setThrottled = _a[1];
  var run = useThrottleFn_default(function() {
    setThrottled(value);
  }, options).run;
  (0, import_react27.useEffect)(function() {
    run();
  }, [value]);
  return throttled;
}
var useThrottle_default = useThrottle;

// node_modules/ahooks/es/useThrottleEffect/index.js
var import_react28 = __toModule(require_react());
var __read20 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useThrottleEffect(effect, deps, options) {
  var _a = __read20((0, import_react28.useState)({}), 2), flag = _a[0], setFlag = _a[1];
  var _b = useThrottleFn_default(function() {
    setFlag({});
  }, options), run = _b.run, cancel = _b.cancel;
  (0, import_react28.useEffect)(function() {
    return run();
  }, deps);
  useUnmount_default(cancel);
  useUpdateEffect_default2(effect, [flag]);
}
var useThrottleEffect_default = useThrottleEffect;

// node_modules/ahooks/es/useDebounce/index.js
var import_react30 = __toModule(require_react());

// node_modules/ahooks/es/useDebounceFn/index.js
var import_lodash4 = __toModule(require_lodash());
var import_react29 = __toModule(require_react());
var __read21 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread10 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read21(arguments[i]));
  }
  return ar;
};
function useDebounceFn(fn, options) {
  var _a;
  var fnRef = (0, import_react29.useRef)(fn);
  fnRef.current = fn;
  var wait = (_a = options === null || options === void 0 ? void 0 : options.wait) !== null && _a !== void 0 ? _a : 1e3;
  var debounced = useCreation(function() {
    return (0, import_lodash4.default)(function() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
        args[_i] = arguments[_i];
      }
      return fnRef.current.apply(fnRef, __spread10(args));
    }, wait, options);
  }, []);
  useUnmount_default(function() {
    debounced.cancel();
  });
  return {
    run: debounced,
    cancel: debounced.cancel,
    flush: debounced.flush
  };
}
var useDebounceFn_default = useDebounceFn;

// node_modules/ahooks/es/useDebounce/index.js
var __read22 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useDebounce(value, options) {
  var _a = __read22((0, import_react30.useState)(value), 2), debounced = _a[0], setDebounced = _a[1];
  var run = useDebounceFn_default(function() {
    setDebounced(value);
  }, options).run;
  (0, import_react30.useEffect)(function() {
    run();
  }, [value]);
  return debounced;
}
var useDebounce_default = useDebounce;

// node_modules/ahooks/es/usePrevious/index.js
var import_react31 = __toModule(require_react());
function usePrevious(state, compare) {
  var prevRef = (0, import_react31.useRef)();
  var curRef = (0, import_react31.useRef)();
  var needUpdate = typeof compare === "function" ? compare(curRef.current, state) : true;
  if (needUpdate) {
    prevRef.current = curRef.current;
    curRef.current = state;
  }
  return prevRef.current;
}
var usePrevious_default = usePrevious;

// node_modules/ahooks/es/useMouse/index.js
var import_react32 = __toModule(require_react());
var __read23 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var initState = {
  screenX: NaN,
  screenY: NaN,
  clientX: NaN,
  clientY: NaN,
  pageX: NaN,
  pageY: NaN
};
var useMouse_default = function() {
  var _a = __read23((0, import_react32.useState)(initState), 2), state = _a[0], setState = _a[1];
  useEventListener_default("mousemove", function(event) {
    var screenX = event.screenX, screenY = event.screenY, clientX = event.clientX, clientY = event.clientY, pageX = event.pageX, pageY = event.pageY;
    setState({
      screenX,
      screenY,
      clientX,
      clientY,
      pageX,
      pageY
    });
  }, {
    target: document
  });
  return state;
};

// node_modules/ahooks/es/useScroll/index.js
var import_react33 = __toModule(require_react());
var __read24 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useScroll(target, shouldUpdate) {
  if (shouldUpdate === void 0) {
    shouldUpdate = function shouldUpdate2() {
      return true;
    };
  }
  var _a = __read24((0, import_react33.useState)({
    left: NaN,
    top: NaN
  }), 2), position = _a[0], setPosition = _a[1];
  var shouldUpdatePersist = usePersistFn_default2(shouldUpdate);
  (0, import_react33.useEffect)(function() {
    var el = getTargetElement(target, document);
    if (!el)
      return;
    function updatePosition(currentTarget) {
      var newPosition;
      if (currentTarget === document) {
        if (!document.scrollingElement)
          return;
        newPosition = {
          left: document.scrollingElement.scrollLeft,
          top: document.scrollingElement.scrollTop
        };
      } else {
        newPosition = {
          left: currentTarget.scrollLeft,
          top: currentTarget.scrollTop
        };
      }
      if (shouldUpdatePersist(newPosition))
        setPosition(newPosition);
    }
    updatePosition(el);
    function listener(event) {
      if (!event.target)
        return;
      updatePosition(event.target);
    }
    el.addEventListener("scroll", listener);
    return function() {
      el.removeEventListener("scroll", listener);
    };
  }, [target, shouldUpdatePersist]);
  return position;
}
var useScroll_default = useScroll;

// node_modules/ahooks/es/useClickAway/index.js
var import_react34 = __toModule(require_react());
var defaultEvent = "click";
function useClickAway(onClickAway, target, eventName) {
  if (eventName === void 0) {
    eventName = defaultEvent;
  }
  var onClickAwayRef = (0, import_react34.useRef)(onClickAway);
  onClickAwayRef.current = onClickAway;
  (0, import_react34.useEffect)(function() {
    var handler = function handler2(event) {
      var targets = Array.isArray(target) ? target : [target];
      if (targets.some(function(targetItem) {
        var targetElement = getTargetElement(targetItem);
        return !targetElement || (targetElement === null || targetElement === void 0 ? void 0 : targetElement.contains(event.target));
      })) {
        return;
      }
      onClickAwayRef.current(event);
    };
    document.addEventListener(eventName, handler);
    return function() {
      document.removeEventListener(eventName, handler);
    };
  }, [target, eventName]);
}

// node_modules/ahooks/es/useFullscreen/index.js
var import_react35 = __toModule(require_react());
var import_screenfull = __toModule(require_screenfull());
var __read25 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var useFullscreen_default = function(target, options) {
  var _a = options || {}, onExitFull = _a.onExitFull, onFull = _a.onFull;
  var onExitFullRef = (0, import_react35.useRef)(onExitFull);
  onExitFullRef.current = onExitFull;
  var onFullRef = (0, import_react35.useRef)(onFull);
  onFullRef.current = onFull;
  var _b = __read25((0, import_react35.useState)(false), 2), state = _b[0], setState = _b[1];
  var onChange = (0, import_react35.useCallback)(function() {
    if (import_screenfull.default.isEnabled) {
      var isFullscreen = import_screenfull.default.isFullscreen;
      if (isFullscreen) {
        onFullRef.current && onFullRef.current();
      } else {
        import_screenfull.default.off("change", onChange);
        onExitFullRef.current && onExitFullRef.current();
      }
      setState(isFullscreen);
    }
  }, []);
  var setFull = (0, import_react35.useCallback)(function() {
    var el = getTargetElement(target);
    if (!el) {
      return;
    }
    if (import_screenfull.default.isEnabled) {
      try {
        import_screenfull.default.request(el);
        import_screenfull.default.on("change", onChange);
      } catch (error) {
      }
    }
  }, [target, onChange]);
  var exitFull = (0, import_react35.useCallback)(function() {
    if (!state) {
      return;
    }
    if (import_screenfull.default.isEnabled) {
      import_screenfull.default.exit();
    }
  }, [state]);
  var toggleFull = (0, import_react35.useCallback)(function() {
    if (state) {
      exitFull();
    } else {
      setFull();
    }
  }, [state, setFull, exitFull]);
  useUnmount_default(function() {
    if (import_screenfull.default.isEnabled) {
      import_screenfull.default.off("change", onChange);
    }
  });
  return [state, {
    setFull,
    exitFull,
    toggleFull
  }];
};

// node_modules/ahooks/es/useInViewport/index.js
var import_react36 = __toModule(require_react());

// node_modules/intersection-observer/intersection-observer.js
(function() {
  "use strict";
  if (typeof window !== "object") {
    return;
  }
  if ("IntersectionObserver" in window && "IntersectionObserverEntry" in window && "intersectionRatio" in window.IntersectionObserverEntry.prototype) {
    if (!("isIntersecting" in window.IntersectionObserverEntry.prototype)) {
      Object.defineProperty(window.IntersectionObserverEntry.prototype, "isIntersecting", {
        get: function() {
          return this.intersectionRatio > 0;
        }
      });
    }
    return;
  }
  var document2 = window.document;
  var registry = [];
  function IntersectionObserverEntry(entry) {
    this.time = entry.time;
    this.target = entry.target;
    this.rootBounds = entry.rootBounds;
    this.boundingClientRect = entry.boundingClientRect;
    this.intersectionRect = entry.intersectionRect || getEmptyRect();
    this.isIntersecting = !!entry.intersectionRect;
    var targetRect = this.boundingClientRect;
    var targetArea = targetRect.width * targetRect.height;
    var intersectionRect = this.intersectionRect;
    var intersectionArea = intersectionRect.width * intersectionRect.height;
    if (targetArea) {
      this.intersectionRatio = Number((intersectionArea / targetArea).toFixed(4));
    } else {
      this.intersectionRatio = this.isIntersecting ? 1 : 0;
    }
  }
  function IntersectionObserver2(callback, opt_options) {
    var options = opt_options || {};
    if (typeof callback != "function") {
      throw new Error("callback must be a function");
    }
    if (options.root && options.root.nodeType != 1) {
      throw new Error("root must be an Element");
    }
    this._checkForIntersections = throttle3(this._checkForIntersections.bind(this), this.THROTTLE_TIMEOUT);
    this._callback = callback;
    this._observationTargets = [];
    this._queuedEntries = [];
    this._rootMarginValues = this._parseRootMargin(options.rootMargin);
    this.thresholds = this._initThresholds(options.threshold);
    this.root = options.root || null;
    this.rootMargin = this._rootMarginValues.map(function(margin) {
      return margin.value + margin.unit;
    }).join(" ");
  }
  IntersectionObserver2.prototype.THROTTLE_TIMEOUT = 100;
  IntersectionObserver2.prototype.POLL_INTERVAL = null;
  IntersectionObserver2.prototype.USE_MUTATION_OBSERVER = true;
  IntersectionObserver2.prototype.observe = function(target) {
    var isTargetAlreadyObserved = this._observationTargets.some(function(item) {
      return item.element == target;
    });
    if (isTargetAlreadyObserved) {
      return;
    }
    if (!(target && target.nodeType == 1)) {
      throw new Error("target must be an Element");
    }
    this._registerInstance();
    this._observationTargets.push({ element: target, entry: null });
    this._monitorIntersections();
    this._checkForIntersections();
  };
  IntersectionObserver2.prototype.unobserve = function(target) {
    this._observationTargets = this._observationTargets.filter(function(item) {
      return item.element != target;
    });
    if (!this._observationTargets.length) {
      this._unmonitorIntersections();
      this._unregisterInstance();
    }
  };
  IntersectionObserver2.prototype.disconnect = function() {
    this._observationTargets = [];
    this._unmonitorIntersections();
    this._unregisterInstance();
  };
  IntersectionObserver2.prototype.takeRecords = function() {
    var records = this._queuedEntries.slice();
    this._queuedEntries = [];
    return records;
  };
  IntersectionObserver2.prototype._initThresholds = function(opt_threshold) {
    var threshold = opt_threshold || [0];
    if (!Array.isArray(threshold))
      threshold = [threshold];
    return threshold.sort().filter(function(t, i, a) {
      if (typeof t != "number" || isNaN(t) || t < 0 || t > 1) {
        throw new Error("threshold must be a number between 0 and 1 inclusively");
      }
      return t !== a[i - 1];
    });
  };
  IntersectionObserver2.prototype._parseRootMargin = function(opt_rootMargin) {
    var marginString = opt_rootMargin || "0px";
    var margins = marginString.split(/\s+/).map(function(margin) {
      var parts = /^(-?\d*\.?\d+)(px|%)$/.exec(margin);
      if (!parts) {
        throw new Error("rootMargin must be specified in pixels or percent");
      }
      return { value: parseFloat(parts[1]), unit: parts[2] };
    });
    margins[1] = margins[1] || margins[0];
    margins[2] = margins[2] || margins[0];
    margins[3] = margins[3] || margins[1];
    return margins;
  };
  IntersectionObserver2.prototype._monitorIntersections = function() {
    if (!this._monitoringIntersections) {
      this._monitoringIntersections = true;
      if (this.POLL_INTERVAL) {
        this._monitoringInterval = setInterval(this._checkForIntersections, this.POLL_INTERVAL);
      } else {
        addEvent(window, "resize", this._checkForIntersections, true);
        addEvent(document2, "scroll", this._checkForIntersections, true);
        if (this.USE_MUTATION_OBSERVER && "MutationObserver" in window) {
          this._domObserver = new MutationObserver(this._checkForIntersections);
          this._domObserver.observe(document2, {
            attributes: true,
            childList: true,
            characterData: true,
            subtree: true
          });
        }
      }
    }
  };
  IntersectionObserver2.prototype._unmonitorIntersections = function() {
    if (this._monitoringIntersections) {
      this._monitoringIntersections = false;
      clearInterval(this._monitoringInterval);
      this._monitoringInterval = null;
      removeEvent(window, "resize", this._checkForIntersections, true);
      removeEvent(document2, "scroll", this._checkForIntersections, true);
      if (this._domObserver) {
        this._domObserver.disconnect();
        this._domObserver = null;
      }
    }
  };
  IntersectionObserver2.prototype._checkForIntersections = function() {
    var rootIsInDom = this._rootIsInDom();
    var rootRect = rootIsInDom ? this._getRootRect() : getEmptyRect();
    this._observationTargets.forEach(function(item) {
      var target = item.element;
      var targetRect = getBoundingClientRect(target);
      var rootContainsTarget = this._rootContainsTarget(target);
      var oldEntry = item.entry;
      var intersectionRect = rootIsInDom && rootContainsTarget && this._computeTargetAndRootIntersection(target, rootRect);
      var newEntry = item.entry = new IntersectionObserverEntry({
        time: now(),
        target,
        boundingClientRect: targetRect,
        rootBounds: rootRect,
        intersectionRect
      });
      if (!oldEntry) {
        this._queuedEntries.push(newEntry);
      } else if (rootIsInDom && rootContainsTarget) {
        if (this._hasCrossedThreshold(oldEntry, newEntry)) {
          this._queuedEntries.push(newEntry);
        }
      } else {
        if (oldEntry && oldEntry.isIntersecting) {
          this._queuedEntries.push(newEntry);
        }
      }
    }, this);
    if (this._queuedEntries.length) {
      this._callback(this.takeRecords(), this);
    }
  };
  IntersectionObserver2.prototype._computeTargetAndRootIntersection = function(target, rootRect) {
    if (window.getComputedStyle(target).display == "none")
      return;
    var targetRect = getBoundingClientRect(target);
    var intersectionRect = targetRect;
    var parent = getParentNode(target);
    var atRoot = false;
    while (!atRoot) {
      var parentRect = null;
      var parentComputedStyle = parent.nodeType == 1 ? window.getComputedStyle(parent) : {};
      if (parentComputedStyle.display == "none")
        return;
      if (parent == this.root || parent == document2) {
        atRoot = true;
        parentRect = rootRect;
      } else {
        if (parent != document2.body && parent != document2.documentElement && parentComputedStyle.overflow != "visible") {
          parentRect = getBoundingClientRect(parent);
        }
      }
      if (parentRect) {
        intersectionRect = computeRectIntersection(parentRect, intersectionRect);
        if (!intersectionRect)
          break;
      }
      parent = getParentNode(parent);
    }
    return intersectionRect;
  };
  IntersectionObserver2.prototype._getRootRect = function() {
    var rootRect;
    if (this.root) {
      rootRect = getBoundingClientRect(this.root);
    } else {
      var html = document2.documentElement;
      var body = document2.body;
      rootRect = {
        top: 0,
        left: 0,
        right: html.clientWidth || body.clientWidth,
        width: html.clientWidth || body.clientWidth,
        bottom: html.clientHeight || body.clientHeight,
        height: html.clientHeight || body.clientHeight
      };
    }
    return this._expandRectByRootMargin(rootRect);
  };
  IntersectionObserver2.prototype._expandRectByRootMargin = function(rect) {
    var margins = this._rootMarginValues.map(function(margin, i) {
      return margin.unit == "px" ? margin.value : margin.value * (i % 2 ? rect.width : rect.height) / 100;
    });
    var newRect = {
      top: rect.top - margins[0],
      right: rect.right + margins[1],
      bottom: rect.bottom + margins[2],
      left: rect.left - margins[3]
    };
    newRect.width = newRect.right - newRect.left;
    newRect.height = newRect.bottom - newRect.top;
    return newRect;
  };
  IntersectionObserver2.prototype._hasCrossedThreshold = function(oldEntry, newEntry) {
    var oldRatio = oldEntry && oldEntry.isIntersecting ? oldEntry.intersectionRatio || 0 : -1;
    var newRatio = newEntry.isIntersecting ? newEntry.intersectionRatio || 0 : -1;
    if (oldRatio === newRatio)
      return;
    for (var i = 0; i < this.thresholds.length; i++) {
      var threshold = this.thresholds[i];
      if (threshold == oldRatio || threshold == newRatio || threshold < oldRatio !== threshold < newRatio) {
        return true;
      }
    }
  };
  IntersectionObserver2.prototype._rootIsInDom = function() {
    return !this.root || containsDeep(document2, this.root);
  };
  IntersectionObserver2.prototype._rootContainsTarget = function(target) {
    return containsDeep(this.root || document2, target);
  };
  IntersectionObserver2.prototype._registerInstance = function() {
    if (registry.indexOf(this) < 0) {
      registry.push(this);
    }
  };
  IntersectionObserver2.prototype._unregisterInstance = function() {
    var index = registry.indexOf(this);
    if (index != -1)
      registry.splice(index, 1);
  };
  function now() {
    return window.performance && performance.now && performance.now();
  }
  function throttle3(fn, timeout) {
    var timer = null;
    return function() {
      if (!timer) {
        timer = setTimeout(function() {
          fn();
          timer = null;
        }, timeout);
      }
    };
  }
  function addEvent(node, event, fn, opt_useCapture) {
    if (typeof node.addEventListener == "function") {
      node.addEventListener(event, fn, opt_useCapture || false);
    } else if (typeof node.attachEvent == "function") {
      node.attachEvent("on" + event, fn);
    }
  }
  function removeEvent(node, event, fn, opt_useCapture) {
    if (typeof node.removeEventListener == "function") {
      node.removeEventListener(event, fn, opt_useCapture || false);
    } else if (typeof node.detatchEvent == "function") {
      node.detatchEvent("on" + event, fn);
    }
  }
  function computeRectIntersection(rect1, rect2) {
    var top = Math.max(rect1.top, rect2.top);
    var bottom = Math.min(rect1.bottom, rect2.bottom);
    var left = Math.max(rect1.left, rect2.left);
    var right = Math.min(rect1.right, rect2.right);
    var width = right - left;
    var height = bottom - top;
    return width >= 0 && height >= 0 && {
      top,
      bottom,
      left,
      right,
      width,
      height
    };
  }
  function getBoundingClientRect(el) {
    var rect;
    try {
      rect = el.getBoundingClientRect();
    } catch (err) {
    }
    if (!rect)
      return getEmptyRect();
    if (!(rect.width && rect.height)) {
      rect = {
        top: rect.top,
        right: rect.right,
        bottom: rect.bottom,
        left: rect.left,
        width: rect.right - rect.left,
        height: rect.bottom - rect.top
      };
    }
    return rect;
  }
  function getEmptyRect() {
    return {
      top: 0,
      bottom: 0,
      left: 0,
      right: 0,
      width: 0,
      height: 0
    };
  }
  function containsDeep(parent, child) {
    var node = child;
    while (node) {
      if (node == parent)
        return true;
      node = getParentNode(node);
    }
    return false;
  }
  function getParentNode(node) {
    var parent = node.parentNode;
    if (parent && parent.nodeType == 11 && parent.host) {
      return parent.host;
    }
    if (parent && parent.assignedSlot) {
      return parent.assignedSlot.parentNode;
    }
    return parent;
  }
  window.IntersectionObserver = IntersectionObserver2;
  window.IntersectionObserverEntry = IntersectionObserverEntry;
})();

// node_modules/ahooks/es/useInViewport/index.js
var __read26 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __values3 = function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function next() {
        if (o && i >= o.length)
          o = void 0;
        return {
          value: o && o[i++],
          done: !o
        };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
function isInViewPort(el) {
  if (!el) {
    return void 0;
  }
  var viewPortWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
  var viewPortHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
  var rect = el.getBoundingClientRect();
  if (rect) {
    var top_1 = rect.top, bottom = rect.bottom, left = rect.left, right = rect.right;
    return bottom > 0 && top_1 <= viewPortHeight && left <= viewPortWidth && right > 0;
  }
  return false;
}
function useInViewport(target) {
  var _a = __read26((0, import_react36.useState)(function() {
    var el = getTargetElement(target);
    return isInViewPort(el);
  }), 2), inViewPort = _a[0], setInViewport = _a[1];
  (0, import_react36.useEffect)(function() {
    var el = getTargetElement(target);
    if (!el) {
      return function() {
      };
    }
    var observer2 = new IntersectionObserver(function(entries) {
      var e_1, _a2;
      try {
        for (var entries_1 = __values3(entries), entries_1_1 = entries_1.next(); !entries_1_1.done; entries_1_1 = entries_1.next()) {
          var entry = entries_1_1.value;
          if (entry.isIntersecting) {
            setInViewport(true);
          } else {
            setInViewport(false);
          }
        }
      } catch (e_1_1) {
        e_1 = {
          error: e_1_1
        };
      } finally {
        try {
          if (entries_1_1 && !entries_1_1.done && (_a2 = entries_1["return"]))
            _a2.call(entries_1);
        } finally {
          if (e_1)
            throw e_1.error;
        }
      }
    });
    observer2.observe(el);
    return function() {
      observer2.disconnect();
    };
  }, [target]);
  return inViewPort;
}
var useInViewport_default = useInViewport;

// node_modules/ahooks/es/useKeyPress/index.js
var import_react37 = __toModule(require_react());
var __values4 = function(o) {
  var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
  if (m)
    return m.call(o);
  if (o && typeof o.length === "number")
    return {
      next: function next() {
        if (o && i >= o.length)
          o = void 0;
        return {
          value: o && o[i++],
          done: !o
        };
      }
    };
  throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var aliasKeyCodeMap = {
  esc: 27,
  tab: 9,
  enter: 13,
  space: 32,
  up: 38,
  left: 37,
  right: 39,
  down: 40,
  "delete": [8, 46]
};
var aliasKeyMap = {
  esc: "Escape",
  tab: "Tab",
  enter: "Enter",
  space: " ",
  up: ["Up", "ArrowUp"],
  left: ["Left", "ArrowLeft"],
  right: ["Right", "ArrowRight"],
  down: ["Down", "ArrowDown"],
  "delete": ["Backspace", "Delete"]
};
var modifierKey = {
  ctrl: function ctrl(event) {
    return event.ctrlKey;
  },
  shift: function shift(event) {
    return event.shiftKey;
  },
  alt: function alt(event) {
    return event.altKey;
  },
  meta: function meta(event) {
    return event.metaKey;
  }
};
var noop = function noop2() {
};
function isType(obj) {
  return Object.prototype.toString.call(obj).replace(/^\[object (.+)\]$/, "$1").toLowerCase();
}
function genFilterKey(event, keyFilter) {
  var e_1, _a;
  if (!event.key) {
    return false;
  }
  var type = isType(keyFilter);
  if (type === "number") {
    return event.keyCode === keyFilter;
  }
  var genArr = keyFilter.split(".");
  var genLen = 0;
  try {
    for (var genArr_1 = __values4(genArr), genArr_1_1 = genArr_1.next(); !genArr_1_1.done; genArr_1_1 = genArr_1.next()) {
      var key = genArr_1_1.value;
      var genModifier = modifierKey[key];
      var aliasKey = aliasKeyMap[key];
      var aliasKeyCode = aliasKeyCodeMap[key];
      if (genModifier && genModifier(event) || (aliasKey && isType(aliasKey) === "array" ? aliasKey.includes(event.key) : aliasKey === event.key) || (aliasKeyCode && isType(aliasKeyCode) === "array" ? aliasKeyCode.includes(event.keyCode) : aliasKeyCode === event.keyCode) || event.key.toUpperCase() === key.toUpperCase()) {
        genLen++;
      }
    }
  } catch (e_1_1) {
    e_1 = {
      error: e_1_1
    };
  } finally {
    try {
      if (genArr_1_1 && !genArr_1_1.done && (_a = genArr_1["return"]))
        _a.call(genArr_1);
    } finally {
      if (e_1)
        throw e_1.error;
    }
  }
  return genLen === genArr.length;
}
function genKeyFormater(keyFilter) {
  var type = isType(keyFilter);
  if (type === "function") {
    return keyFilter;
  }
  if (type === "string" || type === "number") {
    return function(event) {
      return genFilterKey(event, keyFilter);
    };
  }
  if (type === "array") {
    return function(event) {
      return keyFilter.some(function(item) {
        return genFilterKey(event, item);
      });
    };
  }
  return keyFilter ? function() {
    return true;
  } : function() {
    return false;
  };
}
var defaultEvents = ["keydown"];
function useKeyPress(keyFilter, eventHandler, option) {
  if (eventHandler === void 0) {
    eventHandler = noop;
  }
  if (option === void 0) {
    option = {};
  }
  var _a = option.events, events = _a === void 0 ? defaultEvents : _a, target = option.target;
  var callbackRef = (0, import_react37.useRef)(eventHandler);
  callbackRef.current = eventHandler;
  (0, import_react37.useEffect)(function() {
    var e_2, _a2;
    var callbackHandler = function callbackHandler2(event) {
      var genGuard = genKeyFormater(keyFilter);
      if (genGuard(event)) {
        return callbackRef.current(event);
      }
    };
    var el = getTargetElement(target, window);
    try {
      for (var events_1 = __values4(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {
        var eventName = events_1_1.value;
        el.addEventListener(eventName, callbackHandler);
      }
    } catch (e_2_1) {
      e_2 = {
        error: e_2_1
      };
    } finally {
      try {
        if (events_1_1 && !events_1_1.done && (_a2 = events_1["return"]))
          _a2.call(events_1);
      } finally {
        if (e_2)
          throw e_2.error;
      }
    }
    return function() {
      var e_3, _a3;
      try {
        for (var events_2 = __values4(events), events_2_1 = events_2.next(); !events_2_1.done; events_2_1 = events_2.next()) {
          var eventName2 = events_2_1.value;
          el.removeEventListener(eventName2, callbackHandler);
        }
      } catch (e_3_1) {
        e_3 = {
          error: e_3_1
        };
      } finally {
        try {
          if (events_2_1 && !events_2_1.done && (_a3 = events_2["return"]))
            _a3.call(events_2);
        } finally {
          if (e_3)
            throw e_3.error;
        }
      }
    };
  }, [events, keyFilter, target]);
}
var useKeyPress_default = useKeyPress;

// node_modules/ahooks/es/useHover/index.js
var __read27 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var useHover_default = function(target, options) {
  var _a = options || {}, onEnter = _a.onEnter, onLeave = _a.onLeave;
  var _b = __read27(useBoolean(false), 2), state = _b[0], _c = _b[1], setTrue = _c.setTrue, setFalse = _c.setFalse;
  useEventListener_default("mouseenter", function() {
    onEnter && onEnter();
    setTrue();
  }, {
    target
  });
  useEventListener_default("mouseleave", function() {
    onLeave && onLeave();
    setFalse();
  }, {
    target
  });
  return state;
};

// node_modules/ahooks/es/useAntdTable/index.js
var import_react38 = __toModule(require_react());
var __assign6 = function() {
  __assign6 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign6.apply(this, arguments);
};
var __rest4 = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __read28 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread11 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read28(arguments[i]));
  }
  return ar;
};
function useAntdTable(service, options) {
  var form = options.form, _a = options.refreshDeps, refreshDeps = _a === void 0 ? [] : _a, manual = options.manual, _b = options.defaultType, defaultType = _b === void 0 ? "simple" : _b, defaultParams = options.defaultParams, restOptions = __rest4(options, ["form", "refreshDeps", "manual", "defaultType", "defaultParams"]);
  var result = es_default(service, __assign6(__assign6({}, restOptions), {
    paginated: true,
    manual: true
  }));
  var params = result.params, run = result.run;
  var cacheFormTableData = params[2] || {};
  var _c = __read28((0, import_react38.useState)(cacheFormTableData.type || defaultType), 2), type = _c[0], setType = _c[1];
  var _d = __read28((0, import_react38.useState)(cacheFormTableData.allFormData || defaultParams && defaultParams[1] || {}), 2), allFormData = _d[0], setAllFormData = _d[1];
  var getActivetFieldValues = (0, import_react38.useCallback)(function() {
    if (!form) {
      return {};
    }
    if (form.getFieldInstance) {
      var tempAllFiledsValue_1 = form.getFieldsValue();
      var filterFiledsValue_1 = {};
      Object.keys(tempAllFiledsValue_1).forEach(function(key) {
        if (form.getFieldInstance ? form.getFieldInstance(key) : true) {
          filterFiledsValue_1[key] = tempAllFiledsValue_1[key];
        }
      });
      return filterFiledsValue_1;
    }
    return form.getFieldsValue(null, function() {
      return true;
    });
  }, [form]);
  var formRef = (0, import_react38.useRef)(form);
  formRef.current = form;
  (0, import_react38.useEffect)(function() {
    if (!formRef.current) {
      return;
    }
    if (formRef.current.getFieldInstance) {
      var filterFiledsValue_2 = {};
      Object.keys(allFormData).forEach(function(key) {
        if (formRef.current.getFieldInstance ? formRef.current.getFieldInstance(key) : true) {
          filterFiledsValue_2[key] = allFormData[key];
        }
      });
      formRef.current.setFieldsValue(filterFiledsValue_2);
    } else {
      formRef.current.setFieldsValue(allFormData);
    }
  }, [type]);
  (0, import_react38.useEffect)(function() {
    if (params.length > 0) {
      run.apply(void 0, __spread11(params));
      return;
    }
    if (!manual) {
      _submit(defaultParams);
    }
  }, []);
  var changeType = (0, import_react38.useCallback)(function() {
    var currentFormData = getActivetFieldValues();
    setAllFormData(__assign6(__assign6({}, allFormData), currentFormData));
    var targetType = type === "simple" ? "advance" : "simple";
    setType(targetType);
  }, [type, allFormData, getActivetFieldValues]);
  var validateFields = (0, import_react38.useCallback)(function() {
    var fieldValues = getActivetFieldValues();
    if (!form) {
      return Promise.resolve();
    }
    var fields = Object.keys(fieldValues);
    if (!form.getInternalHooks) {
      return new Promise(function(resolve, reject) {
        form.validateFields(fields, function(errors, values) {
          if (errors) {
            reject(errors);
          } else {
            resolve(values);
          }
        });
      });
    }
    return form.validateFields(fields);
  }, [form]);
  var _submit = (0, import_react38.useCallback)(function(initParams) {
    setTimeout(function() {
      validateFields().then(function() {
        var activeFormData = getActivetFieldValues();
        var _allFormData = __assign6(__assign6({}, allFormData), activeFormData);
        setAllFormData(_allFormData);
        if (initParams) {
          run(initParams[0], activeFormData, {
            allFormData: _allFormData,
            type
          });
          return;
        }
        run(__assign6(__assign6({
          pageSize: options.defaultPageSize || 10
        }, params[0] || {}), {
          current: 1
        }), activeFormData, {
          allFormData: _allFormData,
          type
        });
      })["catch"](function(err) {
        return err;
      });
    });
  }, [getActivetFieldValues, run, params, allFormData, type]);
  var reset = (0, import_react38.useCallback)(function() {
    if (form) {
      form.resetFields();
    }
    _submit();
  }, [form, _submit]);
  var resetPersistFn = usePersistFn_default2(reset);
  useUpdateEffect_default2(function() {
    if (!manual) {
      resetPersistFn();
    }
  }, __spread11(refreshDeps));
  var submit = usePersistFn_default2(function(e) {
    if (e && e.preventDefault) {
      e.preventDefault();
    }
    _submit();
  });
  return __assign6(__assign6({}, result), {
    search: {
      submit,
      type,
      changeType,
      reset
    }
  });
}
var useAntdTable_default = useAntdTable;

// node_modules/ahooks/es/useFusionTable/fusionAdapter.js
var __assign7 = function() {
  __assign7 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign7.apply(this, arguments);
};
var fieldAdapter = function fieldAdapter2(field) {
  return {
    getFieldInstance: function getFieldInstance(name) {
      return field.getNames().includes(name);
    },
    setFieldsValue: field.setValues,
    getFieldsValue: field.getValues,
    resetFields: field.resetToDefault,
    validateFields: function validateFields(fields, callback) {
      field.validate(callback);
    }
  };
};
var resultAdapter = function resultAdapter2(result) {
  var tableProps = {
    dataSource: result.tableProps.dataSource,
    loading: result.tableProps.loading,
    onSort: function onSort(dataIndex, order) {
      result.tableProps.onChange({
        current: result.pagination.current,
        pageSize: result.pagination.pageSize
      }, result.filters, {
        field: dataIndex,
        order
      });
    },
    onFilter: function onFilter(filterParams) {
      result.tableProps.onChange({
        current: result.pagination.current,
        pageSize: result.pagination.pageSize
      }, filterParams, result.sorter);
    }
  };
  var paginationProps = {
    onChange: result.pagination.changeCurrent,
    onPageSizeChange: result.pagination.changePageSize,
    current: result.pagination.current,
    pageSize: result.pagination.pageSize,
    total: result.pagination.total
  };
  return __assign7(__assign7({}, result), {
    tableProps,
    paginationProps
  });
};

// node_modules/ahooks/es/useFusionTable/index.js
var __assign8 = function() {
  __assign8 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign8.apply(this, arguments);
};
function useFusionTable(service, options) {
  var ret = useAntdTable_default(service, __assign8(__assign8({}, options), {
    form: options.field ? fieldAdapter(options.field) : void 0
  }));
  return resultAdapter(ret);
}
var useFusionTable_default = useFusionTable;

// node_modules/ahooks/es/useSet/index.js
var import_react39 = __toModule(require_react());
var __assign9 = function() {
  __assign9 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign9.apply(this, arguments);
};
var __read29 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useSet(initialValue) {
  var initialSet = (0, import_react39.useMemo)(function() {
    return initialValue === void 0 ? new Set() : new Set(initialValue);
  }, []);
  var _a = __read29((0, import_react39.useState)(initialSet), 2), set = _a[0], setSet = _a[1];
  var stableActions = (0, import_react39.useMemo)(function() {
    return {
      add: function add(key) {
        setSet(function(prevSet) {
          var temp = new Set(prevSet);
          temp.add(key);
          return temp;
        });
      },
      remove: function remove(key) {
        setSet(function(prevSet) {
          var temp = new Set(prevSet);
          temp["delete"](key);
          return temp;
        });
      },
      reset: function reset() {
        return setSet(initialSet);
      }
    };
  }, [setSet, initialSet]);
  var utils = __assign9({
    has: (0, import_react39.useCallback)(function(key) {
      return set.has(key);
    }, [set])
  }, stableActions);
  return [set, utils];
}
var useSet_default = useSet;

// node_modules/ahooks/es/useMap/index.js
var import_react40 = __toModule(require_react());
var __assign10 = function() {
  __assign10 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign10.apply(this, arguments);
};
var __read30 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useMap(initialValue) {
  var initialMap = (0, import_react40.useMemo)(function() {
    return initialValue === void 0 ? new Map() : new Map(initialValue);
  }, []);
  var _a = __read30((0, import_react40.useState)(initialMap), 2), map = _a[0], setMap = _a[1];
  var stableActions = (0, import_react40.useMemo)(function() {
    return {
      set: function set(key, entry) {
        setMap(function(prev) {
          var temp = new Map(prev);
          temp.set(key, entry);
          return temp;
        });
      },
      setAll: function setAll(newMap) {
        setMap(new Map(newMap));
      },
      remove: function remove(key) {
        setMap(function(prev) {
          var temp = new Map(prev);
          temp["delete"](key);
          return temp;
        });
      },
      reset: function reset() {
        return setMap(initialMap);
      }
    };
  }, [setMap, initialMap]);
  var utils = __assign10({
    get: (0, import_react40.useCallback)(function(key) {
      return map.get(key);
    }, [map])
  }, stableActions);
  return [map, utils];
}
var useMap_default = useMap;

// node_modules/ahooks/es/useDrop/index.js
var import_react41 = __toModule(require_react());
var __read31 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var getProps = function getProps2(callback, setIsHovering) {
  return {
    onDragOver: function onDragOver(event) {
      event.preventDefault();
    },
    onDragEnter: function onDragEnter(event) {
      event.preventDefault();
      setIsHovering(true);
    },
    onDragLeave: function onDragLeave() {
      setIsHovering(false);
    },
    onDrop: function onDrop(event) {
      event.preventDefault();
      event.persist();
      setIsHovering(false);
      callback(event.dataTransfer, event);
    },
    onPaste: function onPaste(event) {
      event.persist();
      callback(event.clipboardData, event);
    }
  };
};
var useDrop = function useDrop2(options) {
  if (options === void 0) {
    options = {};
  }
  var optionsRef = (0, import_react41.useRef)(options);
  optionsRef.current = options;
  var _a = __read31((0, import_react41.useState)(false), 2), isHovering = _a[0], setIsHovering = _a[1];
  var callback = (0, import_react41.useCallback)(function(dataTransfer, event) {
    var uri = dataTransfer.getData("text/uri-list");
    var dom = dataTransfer.getData("custom");
    if (dom && optionsRef.current.onDom) {
      var data = dom;
      try {
        data = JSON.parse(dom);
      } catch (e) {
        data = dom;
      }
      optionsRef.current.onDom(data, event);
      return;
    }
    if (uri && optionsRef.current.onUri) {
      optionsRef.current.onUri(uri, event);
      return;
    }
    if (dataTransfer.files && dataTransfer.files.length && optionsRef.current.onFiles) {
      optionsRef.current.onFiles(Array.from(dataTransfer.files), event);
      return;
    }
    if (dataTransfer.items && dataTransfer.items.length && optionsRef.current.onText) {
      dataTransfer.items[0].getAsString(function(text) {
        optionsRef.current.onText(text, event);
      });
    }
  }, []);
  var props = (0, import_react41.useMemo)(function() {
    return getProps(callback, setIsHovering);
  }, [callback, setIsHovering]);
  return [props, {
    isHovering
  }];
};
var useDrop_default = useDrop;

// node_modules/ahooks/es/useDrag/index.js
var useDrag = function useDrag2(config) {
  var getProps3 = function getProps4(data) {
    return {
      key: config && config.getPropsWithKey === false ? void 0 : JSON.stringify(data),
      draggable: "true",
      onDragStart: function onDragStart(e) {
        if (config && config.onDragStart) {
          config.onDragStart(data, e);
        }
        e.dataTransfer.setData("custom", JSON.stringify(data));
      },
      onDragEnd: function onDragEnd(e) {
        if (config && config.onDragEnd) {
          config.onDragEnd(data, e);
        }
      }
    };
  };
  return getProps3;
};
var useDrag_default = useDrag;

// node_modules/ahooks/es/useMount/index.js
var import_react42 = __toModule(require_react());
var useMount = function useMount2(fn) {
  (0, import_react42.useEffect)(function() {
    fn();
  }, []);
};
var useMount_default = useMount;

// node_modules/ahooks/es/useTextSelection/index.js
var import_react43 = __toModule(require_react());
var __assign11 = function() {
  __assign11 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign11.apply(this, arguments);
};
var __read32 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var initRect = {
  top: NaN,
  left: NaN,
  bottom: NaN,
  right: NaN,
  height: NaN,
  width: NaN
};
var initState2 = __assign11({
  text: ""
}, initRect);
function getRectFromSelection(selection) {
  if (!selection) {
    return initRect;
  }
  if (selection.rangeCount < 1) {
    return initRect;
  }
  var range = selection.getRangeAt(0);
  var _a = range.getBoundingClientRect(), height = _a.height, width = _a.width, top = _a.top, left = _a.left, right = _a.right, bottom = _a.bottom;
  return {
    height,
    width,
    top,
    left,
    right,
    bottom
  };
}
function useTextSelection(target) {
  var _a = __read32((0, import_react43.useState)(initState2), 2), state = _a[0], setState = _a[1];
  var stateRef = (0, import_react43.useRef)(state);
  stateRef.current = state;
  (0, import_react43.useEffect)(function() {
    var el = getTargetElement(target, document);
    if (!el) {
      return function() {
      };
    }
    var mouseupHandler = function mouseupHandler2() {
      var selObj = null;
      var text = "";
      var rect = initRect;
      if (!window.getSelection)
        return;
      selObj = window.getSelection();
      text = selObj ? selObj.toString() : "";
      if (text) {
        rect = getRectFromSelection(selObj);
        setState(__assign11(__assign11(__assign11({}, state), {
          text
        }), rect));
      }
    };
    var mousedownHandler = function mousedownHandler2() {
      if (!window.getSelection)
        return;
      if (stateRef.current.text) {
        setState(__assign11({}, initState2));
      }
      var selObj = window.getSelection();
      if (!selObj)
        return;
      selObj.removeAllRanges();
    };
    el.addEventListener("mouseup", mouseupHandler);
    document.addEventListener("mousedown", mousedownHandler);
    return function() {
      el.removeEventListener("mouseup", mouseupHandler);
      document.removeEventListener("mousedown", mousedownHandler);
    };
  }, [typeof target === "function" ? void 0 : target]);
  return state;
}
var useTextSelection_default = useTextSelection;

// node_modules/ahooks/es/useCounter/index.js
var import_react44 = __toModule(require_react());
var __read33 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function getTargetValue(val, options) {
  if (options === void 0) {
    options = {};
  }
  var min = options.min, max = options.max;
  var target = val;
  if (typeof max === "number") {
    target = Math.min(max, target);
  }
  if (typeof min === "number") {
    target = Math.max(min, target);
  }
  return target;
}
function useCounter(initialValue, options) {
  if (initialValue === void 0) {
    initialValue = 0;
  }
  if (options === void 0) {
    options = {};
  }
  var min = options.min, max = options.max;
  var init = useCreation(function() {
    return getTargetValue(initialValue, {
      min,
      max
    });
  }, []);
  var _a = __read33((0, import_react44.useState)(init), 2), current = _a[0], setCurrent = _a[1];
  var actions = (0, import_react44.useMemo)(function() {
    var setValue = function setValue2(value) {
      setCurrent(function(c) {
        var target = typeof value === "number" ? value : value(c);
        return getTargetValue(target, {
          max,
          min
        });
      });
    };
    var inc = function inc2(delta) {
      if (delta === void 0) {
        delta = 1;
      }
      setValue(function(c) {
        return c + delta;
      });
    };
    var dec = function dec2(delta) {
      if (delta === void 0) {
        delta = 1;
      }
      setValue(function(c) {
        return c - delta;
      });
    };
    var set = function set2(value) {
      setValue(value);
    };
    var reset = function reset2() {
      setValue(init);
    };
    return {
      inc,
      dec,
      set,
      reset
    };
  }, [init, max, min]);
  return [current, actions];
}
var useCounter_default = useCounter;

// node_modules/ahooks/es/useUpdate/index.js
var import_react45 = __toModule(require_react());
var __read34 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var useUpdate = function useUpdate2() {
  var _a = __read34((0, import_react45.useState)({}), 2), setState = _a[1];
  return (0, import_react45.useCallback)(function() {
    return setState({});
  }, []);
};
var useUpdate_default = useUpdate;

// node_modules/ahooks/es/useEventTarget/index.js
var import_react46 = __toModule(require_react());
var __read35 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useEventTarget(options) {
  var _a = options || {}, initialValue = _a.initialValue, transformer = _a.transformer;
  var _b = __read35((0, import_react46.useState)(initialValue), 2), value = _b[0], setValue = _b[1];
  var reset = (0, import_react46.useCallback)(function() {
    return setValue(initialValue);
  }, []);
  var transformerRef = (0, import_react46.useRef)(transformer);
  transformerRef.current = transformer;
  var onChange = (0, import_react46.useCallback)(function(e) {
    var _value = e.target.value;
    if (typeof transformerRef.current === "function") {
      return setValue(transformerRef.current(_value));
    }
    return setValue(_value);
  }, []);
  return [value, {
    onChange,
    reset
  }];
}
var useEventTarget_default = useEventTarget;

// node_modules/ahooks/es/useHistoryTravel/index.js
var import_react47 = __toModule(require_react());
var __read36 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread12 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read36(arguments[i]));
  }
  return ar;
};
var dumpIndex = function dumpIndex2(step, arr) {
  var index = step > 0 ? step - 1 : arr.length + step;
  if (index >= arr.length - 1) {
    index = arr.length - 1;
  }
  if (index < 0) {
    index = 0;
  }
  return index;
};
var split = function split2(step, targetArr) {
  var index = dumpIndex(step, targetArr);
  return {
    _current: targetArr[index],
    _before: targetArr.slice(0, index),
    _after: targetArr.slice(index + 1)
  };
};
function useHistoryTravel(initialValue) {
  var _a = __read36((0, import_react47.useState)({
    present: initialValue,
    past: [],
    future: []
  }), 2), history = _a[0], setHistory = _a[1];
  var present = history.present, past = history.past, future = history.future;
  var initialValueRef = (0, import_react47.useRef)(initialValue);
  var reset = (0, import_react47.useCallback)(function() {
    var params = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      params[_i] = arguments[_i];
    }
    var _initial = params.length > 0 ? params[0] : initialValueRef.current;
    initialValueRef.current = _initial;
    setHistory({
      present: _initial,
      future: [],
      past: []
    });
  }, [history, setHistory]);
  var updateValue = (0, import_react47.useCallback)(function(val) {
    setHistory({
      present: val,
      future: [],
      past: __spread12(past, [present])
    });
  }, [history, setHistory]);
  var _forward = (0, import_react47.useCallback)(function(step) {
    if (step === void 0) {
      step = 1;
    }
    if (future.length === 0) {
      return;
    }
    var _a2 = split(step, future), _before = _a2._before, _current = _a2._current, _after = _a2._after;
    setHistory({
      past: __spread12(past, [present], _before),
      present: _current,
      future: _after
    });
  }, [history, setHistory]);
  var _backward = (0, import_react47.useCallback)(function(step) {
    if (step === void 0) {
      step = -1;
    }
    if (past.length === 0) {
      return;
    }
    var _a2 = split(step, past), _before = _a2._before, _current = _a2._current, _after = _a2._after;
    setHistory({
      past: _before,
      present: _current,
      future: __spread12(_after, [present], future)
    });
  }, [history, setHistory]);
  var go = (0, import_react47.useCallback)(function(step) {
    var stepNum = typeof step === "number" ? step : Number(step);
    if (stepNum === 0) {
      return;
    }
    if (stepNum > 0) {
      return _forward(stepNum);
    }
    _backward(stepNum);
  }, [_backward, _forward]);
  return {
    value: present,
    setValue: updateValue,
    backLength: past.length,
    forwardLength: future.length,
    go,
    back: (0, import_react47.useCallback)(function() {
      go(-1);
    }, [go]),
    forward: (0, import_react47.useCallback)(function() {
      go(1);
    }, [go]),
    reset
  };
}

// node_modules/ahooks/es/useDebounceEffect/index.js
var import_react48 = __toModule(require_react());
var __read37 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useDebounceEffect(effect, deps, options) {
  var _a = __read37((0, import_react48.useState)({}), 2), flag = _a[0], setFlag = _a[1];
  var _b = useDebounceFn_default(function() {
    setFlag({});
  }, options), run = _b.run, cancel = _b.cancel;
  (0, import_react48.useEffect)(function() {
    return run();
  }, deps);
  useUnmount_default(cancel);
  useUpdateEffect_default2(effect, [flag]);
}
var useDebounceEffect_default = useDebounceEffect;

// node_modules/ahooks/es/useCookieState/index.js
var import_js_cookie = __toModule(require_js_cookie());
var import_react49 = __toModule(require_react());
var __assign12 = function() {
  __assign12 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign12.apply(this, arguments);
};
var __rest5 = function(s, e) {
  var t = {};
  for (var p in s) {
    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
      t[p] = s[p];
  }
  if (s != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
      if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
        t[p[i]] = s[p[i]];
    }
  return t;
};
var __read38 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useCookieState(cookieKey, options) {
  if (options === void 0) {
    options = {};
  }
  var _a = __read38((0, import_react49.useState)(function() {
    var cookieValue = import_js_cookie.default.get(cookieKey);
    if (typeof cookieValue === "string")
      return cookieValue;
    if (isFunction(options.defaultValue))
      return options.defaultValue();
    return options.defaultValue;
  }), 2), state = _a[0], setState = _a[1];
  var updateState = (0, import_react49.useCallback)(function(newValue, newOptions) {
    if (newOptions === void 0) {
      newOptions = {};
    }
    var _a2 = __assign12(__assign12({}, options), newOptions), defaultValue = _a2.defaultValue, restOptions = __rest5(_a2, ["defaultValue"]);
    setState(function(prevState) {
      var value = isFunction(newValue) ? newValue(prevState) : newValue;
      if (value === void 0 || value === null) {
        import_js_cookie.default.remove(cookieKey);
      } else {
        import_js_cookie.default.set(cookieKey, value, restOptions);
      }
      return value;
    });
  }, [cookieKey, options]);
  return [state, updateState];
}
var useCookieState_default = useCookieState;

// node_modules/ahooks/es/useSetState/index.js
var import_react50 = __toModule(require_react());
var __assign13 = function() {
  __assign13 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign13.apply(this, arguments);
};
var __read39 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var useSetState = function useSetState2(initialState) {
  if (initialState === void 0) {
    initialState = {};
  }
  var _a = __read39((0, import_react50.useState)(initialState), 2), state = _a[0], setState = _a[1];
  var setMergeState = (0, import_react50.useCallback)(function(patch) {
    setState(function(prevState) {
      return __assign13(__assign13({}, prevState), isFunction(patch) ? patch(prevState) : patch);
    });
  }, []);
  return [state, setMergeState];
};
var useSetState_default = useSetState;

// node_modules/ahooks/es/useInterval/index.js
var import_react51 = __toModule(require_react());
function useInterval(fn, delay, options) {
  var immediate = options === null || options === void 0 ? void 0 : options.immediate;
  var fnRef = (0, import_react51.useRef)();
  fnRef.current = fn;
  (0, import_react51.useEffect)(function() {
    var _a;
    if (delay === void 0 || delay === null)
      return;
    if (immediate) {
      (_a = fnRef.current) === null || _a === void 0 ? void 0 : _a.call(fnRef);
    }
    var timer = setInterval(function() {
      var _a2;
      (_a2 = fnRef.current) === null || _a2 === void 0 ? void 0 : _a2.call(fnRef);
    }, delay);
    return function() {
      clearInterval(timer);
    };
  }, [delay]);
}
var useInterval_default = useInterval;

// node_modules/ahooks/es/useWhyDidYouUpdate/index.js
var import_react52 = __toModule(require_react());
var __assign14 = function() {
  __assign14 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign14.apply(this, arguments);
};
function useWhyDidYouUpdate(componentName, props) {
  var prevProps = (0, import_react52.useRef)({});
  (0, import_react52.useEffect)(function() {
    if (prevProps.current) {
      var allKeys = Object.keys(__assign14(__assign14({}, prevProps.current), props));
      var changedProps_1 = {};
      allKeys.forEach(function(key) {
        if (prevProps.current[key] !== props[key]) {
          changedProps_1[key] = {
            from: prevProps.current[key],
            to: props[key]
          };
        }
      });
      if (Object.keys(changedProps_1).length) {
        console.log("[why-did-you-update]", componentName, changedProps_1);
      }
    }
    prevProps.current = props;
  });
}

// node_modules/ahooks/es/useTitle/index.js
var import_react53 = __toModule(require_react());
var DEFAULT_OPTIONS = {
  restoreOnUnmount: false
};
function useTitle(title, options) {
  if (options === void 0) {
    options = DEFAULT_OPTIONS;
  }
  var titleRef = (0, import_react53.useRef)(document.title);
  (0, import_react53.useEffect)(function() {
    document.title = title;
  }, [title]);
  useUnmount_default(function() {
    if (options && options.restoreOnUnmount) {
      document.title = titleRef.current;
    }
  });
}
var useTitle_default = typeof document !== "undefined" ? useTitle : function() {
};

// node_modules/ahooks/es/useNetwork/index.js
var import_react54 = __toModule(require_react());
var __assign15 = function() {
  __assign15 = Object.assign || function(t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
      s = arguments[i];
      for (var p in s) {
        if (Object.prototype.hasOwnProperty.call(s, p))
          t[p] = s[p];
      }
    }
    return t;
  };
  return __assign15.apply(this, arguments);
};
var __read40 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function getConnection() {
  var nav = navigator;
  if (typeof nav !== "object")
    return null;
  return nav.connection || nav.mozConnection || nav.webkitConnection;
}
function getConnectionProperty() {
  var c = getConnection();
  if (!c)
    return {};
  return {
    rtt: c.rtt,
    type: c.type,
    saveData: c.saveData,
    downlink: c.downlink,
    downlinkMax: c.downlinkMax,
    effectiveType: c.effectiveType
  };
}
function useNetwork() {
  var _a = __read40((0, import_react54.useState)(function() {
    return __assign15({
      since: void 0,
      online: navigator.onLine
    }, getConnectionProperty());
  }), 2), state = _a[0], setState = _a[1];
  (0, import_react54.useEffect)(function() {
    var onOnline = function onOnline2() {
      setState(function(prevState) {
        return __assign15(__assign15({}, prevState), {
          online: true,
          since: new Date()
        });
      });
    };
    var onOffline = function onOffline2() {
      setState(function(prevState) {
        return __assign15(__assign15({}, prevState), {
          online: false,
          since: new Date()
        });
      });
    };
    var onConnectionChange = function onConnectionChange2() {
      setState(function(prevState) {
        return __assign15(__assign15({}, prevState), getConnectionProperty());
      });
    };
    window.addEventListener("online", onOnline);
    window.addEventListener("offline", onOffline);
    var connection = getConnection();
    connection === null || connection === void 0 ? void 0 : connection.addEventListener("change", onConnectionChange);
    return function() {
      window.removeEventListener("online", onOnline);
      window.removeEventListener("offline", onOffline);
      connection === null || connection === void 0 ? void 0 : connection.removeEventListener("change", onConnectionChange);
    };
  }, []);
  return state;
}
var useNetwork_default = useNetwork;

// node_modules/ahooks/es/useTimeout/index.js
var import_react55 = __toModule(require_react());
function useTimeout(fn, delay) {
  var timerFn = usePersistFn_default2(fn);
  (0, import_react55.useEffect)(function() {
    if (delay === void 0 || delay === null)
      return;
    var timer = setTimeout(function() {
      timerFn();
    }, delay);
    return function() {
      clearTimeout(timer);
    };
  }, [delay, timerFn]);
}
var useTimeout_default = useTimeout;

// node_modules/ahooks/es/useReactive/index.js
var import_react56 = __toModule(require_react());
var __read41 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var proxyMap = new WeakMap();
var rawMap = new WeakMap();
function isObject(val) {
  return typeof val === "object" && val !== null;
}
function observer(initialVal, cb) {
  var existingProxy = proxyMap.get(initialVal);
  if (existingProxy) {
    return existingProxy;
  }
  if (rawMap.has(initialVal)) {
    return initialVal;
  }
  var proxy = new Proxy(initialVal, {
    get: function get(target, key, receiver) {
      var res = Reflect.get(target, key, receiver);
      return isObject(res) ? observer(res, cb) : Reflect.get(target, key);
    },
    set: function set(target, key, val) {
      var ret = Reflect.set(target, key, val);
      cb();
      return ret;
    },
    deleteProperty: function deleteProperty(target, key) {
      var ret = Reflect.deleteProperty(target, key);
      cb();
      return ret;
    }
  });
  proxyMap.set(initialVal, proxy);
  rawMap.set(proxy, initialVal);
  return proxy;
}
function useReactive(initialState) {
  var _a = __read41((0, import_react56.useState)({}), 2), setFlag = _a[1];
  var stateRef = (0, import_react56.useRef)(initialState);
  var state = useCreation(function() {
    return observer(stateRef.current, function() {
      setFlag({});
    });
  }, []);
  return state;
}
var useReactive_default = useReactive;

// node_modules/ahooks/es/useFavicon/index.js
var import_react57 = __toModule(require_react());
var ImgTypeMap = {
  SVG: "image/svg+xml",
  ICO: "image/x-icon",
  GIF: "image/gif",
  PNG: "image/png"
};
var useFavicon = function useFavicon2(favUrl) {
  (0, import_react57.useEffect)(function() {
    if (!favUrl)
      return;
    var cutUrl = favUrl.split(".");
    var imgSuffix = cutUrl[cutUrl.length - 1].toLocaleUpperCase();
    var link = document.querySelector("link[rel*='icon']") || document.createElement("link");
    link.type = ImgTypeMap[imgSuffix];
    link.href = favUrl;
    link.rel = "shortcut icon";
    document.getElementsByTagName("head")[0].appendChild(link);
  }, [favUrl]);
};
var useFavicon_default = useFavicon;

// node_modules/ahooks/es/useCountDown/index.js
var import_react58 = __toModule(require_react());
var import_dayjs = __toModule(require_dayjs_min());
var __read42 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var calcLeft = function calcLeft2(t) {
  if (!t) {
    return 0;
  }
  var left = (0, import_dayjs.default)(t).valueOf() - new Date().getTime();
  if (left < 0) {
    return 0;
  }
  return left;
};
var parseMs = function parseMs2(milliseconds) {
  return {
    days: Math.floor(milliseconds / 864e5),
    hours: Math.floor(milliseconds / 36e5) % 24,
    minutes: Math.floor(milliseconds / 6e4) % 60,
    seconds: Math.floor(milliseconds / 1e3) % 60,
    milliseconds: Math.floor(milliseconds) % 1e3
  };
};
var useCountdown = function useCountdown2(options) {
  var _a = options || {}, targetDate = _a.targetDate, _b = _a.interval, interval = _b === void 0 ? 1e3 : _b, onEnd = _a.onEnd;
  var _c = __read42((0, import_react58.useState)(targetDate), 2), target = _c[0], setTargetDate = _c[1];
  var _d = __read42((0, import_react58.useState)(function() {
    return calcLeft(target);
  }), 2), timeLeft = _d[0], setTimeLeft = _d[1];
  var onEndPersistFn = usePersistFn_default2(function() {
    if (onEnd) {
      onEnd();
    }
  });
  (0, import_react58.useEffect)(function() {
    if (!target) {
      setTimeLeft(0);
      return;
    }
    setTimeLeft(calcLeft(target));
    var timer = setInterval(function() {
      var targetLeft = calcLeft(target);
      setTimeLeft(targetLeft);
      if (targetLeft === 0) {
        clearInterval(timer);
        onEndPersistFn();
      }
    }, interval);
    return function() {
      return clearInterval(timer);
    };
  }, [target, interval]);
  var formattedRes = (0, import_react58.useMemo)(function() {
    return parseMs(timeLeft);
  }, [timeLeft]);
  return [timeLeft, setTargetDate, formattedRes];
};
var useCountDown_default = useCountdown;

// node_modules/ahooks/es/useWebSocket/index.js
var import_react59 = __toModule(require_react());
var __read43 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var ReadyState;
(function(ReadyState2) {
  ReadyState2[ReadyState2["Connecting"] = 0] = "Connecting";
  ReadyState2[ReadyState2["Open"] = 1] = "Open";
  ReadyState2[ReadyState2["Closing"] = 2] = "Closing";
  ReadyState2[ReadyState2["Closed"] = 3] = "Closed";
})(ReadyState || (ReadyState = {}));
function useWebSocket(socketUrl, options) {
  if (options === void 0) {
    options = {};
  }
  var _a = options.reconnectLimit, reconnectLimit = _a === void 0 ? 3 : _a, _b = options.reconnectInterval, reconnectInterval = _b === void 0 ? 3 * 1e3 : _b, _c = options.manual, manual = _c === void 0 ? false : _c, onOpen = options.onOpen, onClose = options.onClose, onMessage = options.onMessage, onError = options.onError;
  var reconnectTimesRef = (0, import_react59.useRef)(0);
  var reconnectTimerRef = (0, import_react59.useRef)();
  var websocketRef = (0, import_react59.useRef)();
  var _d = __read43((0, import_react59.useState)(), 2), latestMessage = _d[0], setLatestMessage = _d[1];
  var _e = __read43((0, import_react59.useState)(ReadyState.Closed), 2), readyState = _e[0], setReadyState = _e[1];
  var reconnect = usePersistFn_default2(function() {
    var _a2;
    if (reconnectTimesRef.current < reconnectLimit && ((_a2 = websocketRef.current) === null || _a2 === void 0 ? void 0 : _a2.readyState) !== ReadyState.Open) {
      reconnectTimerRef.current && clearTimeout(reconnectTimerRef.current);
      reconnectTimerRef.current = setTimeout(function() {
        connectWs();
        reconnectTimesRef.current++;
      }, reconnectInterval);
    }
  });
  var connectWs = usePersistFn_default2(function() {
    reconnectTimerRef.current && clearTimeout(reconnectTimerRef.current);
    if (websocketRef.current) {
      websocketRef.current.close();
    }
    try {
      websocketRef.current = new WebSocket(socketUrl);
      websocketRef.current.onerror = function(event) {
        var _a2;
        reconnect();
        onError && onError(event);
        setReadyState(((_a2 = websocketRef.current) === null || _a2 === void 0 ? void 0 : _a2.readyState) || ReadyState.Closed);
      };
      websocketRef.current.onopen = function(event) {
        var _a2;
        onOpen && onOpen(event);
        reconnectTimesRef.current = 0;
        setReadyState(((_a2 = websocketRef.current) === null || _a2 === void 0 ? void 0 : _a2.readyState) || ReadyState.Closed);
      };
      websocketRef.current.onmessage = function(message) {
        onMessage && onMessage(message);
        setLatestMessage(message);
      };
      websocketRef.current.onclose = function(event) {
        var _a2;
        reconnect();
        onClose && onClose(event);
        setReadyState(((_a2 = websocketRef.current) === null || _a2 === void 0 ? void 0 : _a2.readyState) || ReadyState.Closed);
      };
    } catch (error) {
      throw error;
    }
  });
  var sendMessage = usePersistFn_default2(function(message) {
    var _a2;
    if (readyState === ReadyState.Open) {
      (_a2 = websocketRef.current) === null || _a2 === void 0 ? void 0 : _a2.send(message);
    } else {
      throw new Error("WebSocket disconnected");
    }
  });
  var connect = usePersistFn_default2(function() {
    reconnectTimesRef.current = 0;
    connectWs();
  });
  var disconnect = usePersistFn_default2(function() {
    var _a2;
    reconnectTimerRef.current && clearTimeout(reconnectTimerRef.current);
    reconnectTimesRef.current = reconnectLimit;
    (_a2 = websocketRef.current) === null || _a2 === void 0 ? void 0 : _a2.close();
  });
  (0, import_react59.useEffect)(function() {
    if (!manual) {
      connect();
    }
  }, [socketUrl, manual]);
  useUnmount_default(function() {
    disconnect();
  });
  return {
    latestMessage,
    sendMessage,
    connect,
    disconnect,
    readyState,
    webSocketIns: websocketRef.current
  };
}

// node_modules/ahooks/es/useLockFn/index.js
var import_react60 = __toModule(require_react());
var __awaiter = function(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function(resolve) {
      resolve(value);
    });
  }
  return new (P || (P = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
};
var __generator = function(thisArg, body) {
  var _ = {
    label: 0,
    sent: function sent() {
      if (t[0] & 1)
        throw t[1];
      return t[1];
    },
    trys: [],
    ops: []
  }, f, y, t, g;
  return g = {
    next: verb(0),
    "throw": verb(1),
    "return": verb(2)
  }, typeof Symbol === "function" && (g[Symbol.iterator] = function() {
    return this;
  }), g;
  function verb(n) {
    return function(v) {
      return step([n, v]);
    };
  }
  function step(op) {
    if (f)
      throw new TypeError("Generator is already executing.");
    while (_) {
      try {
        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
          return t;
        if (y = 0, t)
          op = [op[0] & 2, t.value];
        switch (op[0]) {
          case 0:
          case 1:
            t = op;
            break;
          case 4:
            _.label++;
            return {
              value: op[1],
              done: false
            };
          case 5:
            _.label++;
            y = op[1];
            op = [0];
            continue;
          case 7:
            op = _.ops.pop();
            _.trys.pop();
            continue;
          default:
            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
              _ = 0;
              continue;
            }
            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
              _.label = op[1];
              break;
            }
            if (op[0] === 6 && _.label < t[1]) {
              _.label = t[1];
              t = op;
              break;
            }
            if (t && _.label < t[2]) {
              _.label = t[2];
              _.ops.push(op);
              break;
            }
            if (t[2])
              _.ops.pop();
            _.trys.pop();
            continue;
        }
        op = body.call(thisArg, _);
      } catch (e) {
        op = [6, e];
        y = 0;
      } finally {
        f = t = 0;
      }
    }
    if (op[0] & 5)
      throw op[1];
    return {
      value: op[0] ? op[1] : void 0,
      done: true
    };
  }
};
var __read44 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread13 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read44(arguments[i]));
  }
  return ar;
};
function useLockFn(fn) {
  var _this = this;
  var lockRef = (0, import_react60.useRef)(false);
  return (0, import_react60.useCallback)(function() {
    var args = [];
    for (var _i = 0; _i < arguments.length; _i++) {
      args[_i] = arguments[_i];
    }
    return __awaiter(_this, void 0, void 0, function() {
      var ret, e_1;
      return __generator(this, function(_a) {
        switch (_a.label) {
          case 0:
            if (lockRef.current)
              return [
                2
              ];
            lockRef.current = true;
            _a.label = 1;
          case 1:
            _a.trys.push([1, 3, , 4]);
            return [
              4,
              fn.apply(void 0, __spread13(args))
            ];
          case 2:
            ret = _a.sent();
            lockRef.current = false;
            return [
              2,
              ret
            ];
          case 3:
            e_1 = _a.sent();
            lockRef.current = false;
            throw e_1;
          case 4:
            return [
              2
            ];
        }
      });
    });
  }, [fn]);
}
var useLockFn_default = useLockFn;

// node_modules/ahooks/es/useTrackedEffect/index.js
var import_react61 = __toModule(require_react());
var useTrackedEffect = function useTrackedEffect2(effect, deps) {
  var previousDepsRef = (0, import_react61.useRef)();
  var diffTwoDeps = function diffTwoDeps2(deps1, deps2) {
    return deps1 ? deps1.map(function(_ele, idx) {
      return deps1[idx] !== deps2[idx] ? idx : -1;
    }).filter(function(ele) {
      return ele >= 0;
    }) : deps2 ? deps2.map(function(_ele, idx) {
      return idx;
    }) : [];
  };
  (0, import_react61.useEffect)(function() {
    var changes = diffTwoDeps(previousDepsRef.current, deps);
    var previousDeps = previousDepsRef.current;
    previousDepsRef.current = deps;
    return effect(changes, previousDeps, deps);
  }, deps);
};
var useTrackedEffect_default = useTrackedEffect;

// node_modules/ahooks/es/useUnmountedRef/index.js
var import_react62 = __toModule(require_react());
var useUnmountedRef = function useUnmountedRef2() {
  var unmountedRef = (0, import_react62.useRef)(false);
  (0, import_react62.useEffect)(function() {
    unmountedRef.current = false;
    return function() {
      unmountedRef.current = true;
    };
  }, []);
  return unmountedRef;
};
var useUnmountedRef_default = useUnmountedRef;

// node_modules/ahooks/es/useExternal/index.js
var import_react63 = __toModule(require_react());
var __read45 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useExternal(path, options) {
  var isPath = typeof path === "string" && path !== "";
  var _a = __read45((0, import_react63.useState)(isPath ? "loading" : "unset"), 2), status = _a[0], setStatus = _a[1];
  var _b = __read45((0, import_react63.useState)(isPath), 2), active = _b[0], setActive = _b[1];
  var ref = (0, import_react63.useRef)();
  (0, import_react63.useEffect)(function() {
    var _a2;
    (_a2 = ref.current) === null || _a2 === void 0 ? void 0 : _a2.remove();
    if (!isPath || !active) {
      setStatus("unset");
      ref.current = void 0;
      return;
    }
    setStatus("loading");
    var pathname = path.replace(/[|#].*$/, "");
    if ((options === null || options === void 0 ? void 0 : options.type) === "css" || /(^css!|\.css$)/.test(pathname)) {
      ref.current = document.createElement("link");
      ref.current.rel = "stylesheet";
      ref.current.href = path;
      ref.current.media = (options === null || options === void 0 ? void 0 : options.media) || "all";
      var isLegacyIECss = "hideFocus" in ref.current;
      if (isLegacyIECss && ref.current.relList) {
        ref.current.rel = "preload";
        ref.current.as = "style";
      }
      ref.current.setAttribute("data-status", "loading");
      document.head.appendChild(ref.current);
    } else if ((options === null || options === void 0 ? void 0 : options.type) === "js" || /(^js!|\.js$)/.test(pathname)) {
      ref.current = document.createElement("script");
      ref.current.src = path;
      ref.current.async = (options === null || options === void 0 ? void 0 : options.async) === void 0 ? true : options === null || options === void 0 ? void 0 : options.async;
      ref.current.setAttribute("data-status", "loading");
      document.body.appendChild(ref.current);
    } else if ((options === null || options === void 0 ? void 0 : options.type) === "img" || /(^img!|\.(png|gif|jpg|svg|webp)$)/.test(pathname)) {
      ref.current = document.createElement("img");
      ref.current.src = path;
      ref.current.setAttribute("data-status", "loading");
      var wrapper = getTargetElement(options === null || options === void 0 ? void 0 : options.target) || document.body;
      if (wrapper) {
        wrapper.appendChild(ref.current);
      }
    } else {
      console.error("Cannot infer the type of external resource, and please provide a type ('js' | 'css' | 'img'). Refer to the https://ahooks.js.org/hooks/dom/use-external/#options");
    }
    if (!ref.current)
      return;
    var setAttributeFromEvent = function setAttributeFromEvent2(event) {
      var _a3;
      (_a3 = ref.current) === null || _a3 === void 0 ? void 0 : _a3.setAttribute("data-status", event.type === "load" ? "ready" : "error");
    };
    ref.current.addEventListener("load", setAttributeFromEvent);
    ref.current.addEventListener("error", setAttributeFromEvent);
    var setStateFromEvent = function setStateFromEvent2(event) {
      setStatus(event.type === "load" ? "ready" : "error");
    };
    ref.current.addEventListener("load", setStateFromEvent);
    ref.current.addEventListener("error", setStateFromEvent);
    return function() {
      var _a3, _b2;
      (_a3 = ref.current) === null || _a3 === void 0 ? void 0 : _a3.removeEventListener("load", setStateFromEvent);
      (_b2 = ref.current) === null || _b2 === void 0 ? void 0 : _b2.removeEventListener("error", setStateFromEvent);
    };
  }, [path, active]);
  var action = (0, import_react63.useMemo)(function() {
    var unload = function unload2() {
      return setActive(false);
    };
    var load = function load2() {
      return setActive(true);
    };
    var toggle = function toggle2() {
      return setActive(function(value) {
        return !value;
      });
    };
    return {
      toggle,
      load,
      unload
    };
  }, [setActive]);
  return [status, action];
}

// node_modules/ahooks/es/useSafeState/index.js
var import_react64 = __toModule(require_react());
var __read46 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
function useSafeState(initialState) {
  var unmountedRef = useUnmountedRef_default();
  var _a = __read46(import_react64.default.useState(initialState), 2), state = _a[0], setState = _a[1];
  var setCurrentState = import_react64.default.useCallback(function(currentState) {
    if (unmountedRef.current)
      return;
    setState(currentState);
  }, []);
  return [state, setCurrentState];
}
var useSafeState_default = useSafeState;

// node_modules/ahooks/es/index.js
var __read47 = function(o, n) {
  var m = typeof Symbol === "function" && o[Symbol.iterator];
  if (!m)
    return o;
  var i = m.call(o), r, ar = [], e;
  try {
    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) {
      ar.push(r.value);
    }
  } catch (error) {
    e = {
      error
    };
  } finally {
    try {
      if (r && !r.done && (m = i["return"]))
        m.call(i);
    } finally {
      if (e)
        throw e.error;
    }
  }
  return ar;
};
var __spread14 = function() {
  for (var ar = [], i = 0; i < arguments.length; i++) {
    ar = ar.concat(__read47(arguments[i]));
  }
  return ar;
};
var useControlledValue = function useControlledValue2() {
  var args = [];
  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }
  console.warn("useControlledValue is deprecated and will be removed in the next major version. Please use useControllableValue instead.");
  return useControllableValue_default.apply(void 0, __spread14(args));
};
export {
  UseRequestProvider,
  configResponsive,
  useAntdTable_default as useAntdTable,
  useBoolean,
  useClickAway,
  useControllableValue_default as useControllableValue,
  useControlledValue,
  useCookieState_default as useCookieState,
  useCountDown_default as useCountDown,
  useCounter_default as useCounter,
  useCreation,
  useDebounce_default as useDebounce,
  useDebounceEffect_default as useDebounceEffect,
  useDebounceFn_default as useDebounceFn,
  useDocumentVisibility_default as useDocumentVisibility,
  useDrag_default as useDrag,
  useDrop_default as useDrop,
  useDynamicList_default as useDynamicList,
  useEventEmitter,
  useEventListener_default as useEventListener,
  useEventTarget_default as useEventTarget,
  useExternal,
  useFavicon_default as useFavicon,
  useFullscreen_default as useFullscreen,
  useFusionTable_default as useFusionTable,
  useHistoryTravel,
  useHover_default as useHover,
  useInViewport_default as useInViewport,
  useInterval_default as useInterval,
  useKeyPress_default as useKeyPress,
  useLocalStorageState_default as useLocalStorageState,
  useLockFn_default as useLockFn,
  useMap_default as useMap,
  useMount_default as useMount,
  useMouse_default as useMouse,
  useNetwork_default as useNetwork,
  usePersistFn_default2 as usePersistFn,
  usePrevious_default as usePrevious,
  useReactive_default as useReactive,
  es_default as useRequest,
  useResponsive,
  useSafeState_default as useSafeState,
  useScroll_default as useScroll,
  useSelections,
  useSessionStorageState_default as useSessionStorageState,
  useSet_default as useSet,
  useSetState_default as useSetState,
  useSize_default as useSize,
  useTextSelection_default as useTextSelection,
  useThrottle_default as useThrottle,
  useThrottleEffect_default as useThrottleEffect,
  useThrottleFn_default as useThrottleFn,
  useTimeout_default as useTimeout,
  useTitle_default as useTitle,
  useToggle_default as useToggle,
  useTrackedEffect_default as useTrackedEffect,
  useUnmount_default as useUnmount,
  useUnmountedRef_default as useUnmountedRef,
  useUpdate_default as useUpdate,
  useUpdateEffect_default2 as useUpdateEffect,
  useUpdateLayoutEffect_default as useUpdateLayoutEffect,
  useVirtualList_default as useVirtualList,
  useWebSocket,
  useWhyDidYouUpdate
};
/*!
 * JavaScript Cookie v2.2.1
 * https://github.com/js-cookie/js-cookie
 *
 * Copyright 2006, 2015 Klaus Hartl & Fagner Brack
 * Released under the MIT license
 */
/*!
* screenfull
* v5.1.0 - 2020-12-24
* (c) Sindre Sorhus; MIT License
*/
//# sourceMappingURL=ahooks.js.map
